<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.4  (Unix)">
	<META NAME="CREATED" CONTENT="0;0">
	<META NAME="CHANGED" CONTENT="0;0">
	<STYLE TYPE="text/css">
	<!--
		@page { size: 8.27in 11.69in; margin-left: 1.18in; margin-right: 1.18in; margin-top: 0.98in; margin-bottom: 0.98in }
		P { margin-bottom: 0.08in; color: #000000 }
		P.western { font-size: 12pt; so-language: es-ES }
		P.cjk { so-language: es-ES }
		P.ctl { font-size: 12pt }
		A.western:visited { font-size: 12pt; so-language: en-US }
		A.cjk:visited { so-language: zxx }
		A.ctl:visited { font-size: 12pt }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-US" TEXT="#000000" DIR="LTR" STYLE="border: none; padding: 0in">
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><BR><BR>
</P>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><B>The
changes to the non-beta versions are detailed below.  If you have
encountered any of those problems before, they should be fixed now. 
If you find further bugs, a report (with complete instructions to
reproduce the bug, and preferably a data set) is appreciated.  Thanks
to all the people who found and reported bugs (indicated in square
brackets) . </B>
</P>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to version of February 2004 </SPAN> (March 2004)<SPAN LANG="en-GB">: </SPAN>
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added possibility to read files with blanks in the names (e.g. &quot;My
	Documents&quot; directory). This was fixed with a workaround in the
	string parser, a workaround which uses internally the '^' symbol
	(ASCII 94) as a substitute for the blanks. This means that file
	names which actually have the symbol '^' cannot be read (the symbol
	is highly unusual in file names, anyway). 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed storing of names of tree files in the
	&quot;Previous files&quot; section of the File menu; these were
	stored before without complete path specification, and then running
	TNT in a different directory created problems to re-read the files. </SPAN>
	 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There was a bug in the monophyly checking
	commands (command &quot;mono&quot;, invoked from </SPAN><SPAN LANG="en-GB"><U>Trees/Monophyly</U></SPAN><SPAN LANG="en-GB">).
	When there were more than 16 positive group constraints defined and
	polytomies in the tree to be tested, the test was incorrect for some
	groups (possibly producing apparent non-monophyly for monophyletic
	groups among the first 16, and apparent monophyly for
	non-monophyletic groups beyond the first 16). [ Peter Hovenkamp ] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There was a bug in searches under group
	constraints (for both mono and non-monophyly); when more than 16
	constraints were defined, constraints internally numbered as 15, 31,
	47 (i.e. every 16, starting from 15) were not checked. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The &quot;mono-&quot; option (which reports trees violating
	constraints, instead of trees fulfilling them) did not work. It's
	fixed now.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Exact searches for continuous characters could sometimes miss
	optimal trees, in hardly predictable ways (which could depend on the
	taxon ordering in the matrix). When adding a taxon to a left branch
	in a growing network improved the bound, the bound was not updated
	properly, so that subsequent locations of that same taxon which
	improved even further the (actual) bound, were considered as
	inferior. Bounds were properly updated for the right branch.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to randomize taxon insertion
	sequence in Wagner trees (</SPAN><SPAN LANG="en-GB"><I><B>rseed[;</B></I></SPAN><SPAN LANG="en-GB">).
	Relevant only for highly unstructured data. With random insertion
	sequence, uninformative data with tree collapsing turned off produce
	(roughly) random trees as result of a Wagner tree. With the
	(default), up-down insertion sequence (or in PAUP*) uninformative
	data with tree collapsing turned off produce strongly pectinate
	wagner trees. </SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">User-fuses (i.e. the '/ ' option of the </SPAN><SPAN LANG="en-GB"><I><B>tfuse
	</B></I></SPAN><SPAN LANG="en-GB">command) produced trees that, even
	if identical, could be considered as distinct (unless subsequently
	collapsed). </SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	On-line instructions for help were missing one carriage return (the
	first two lines ran one over the other). Added now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed occasional crashes when reading scopes
	where character names had been defined for some characters and not
	for others.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed problems when using new tech searches as
	part of resampling; if using sectorial searches under resampling
	make sure you have plenty of slack (50% or so). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added </SPAN><SPAN LANG="en-GB"><I><B>opendlg </B></I></SPAN><SPAN LANG="en-GB">and
	</SPAN><I><B>getfname</B></I> <SPAN LANG="en-GB">commands for macros
	(Windows only, see online help). The file &quot;dialog.run&quot;
	(contained in the self-extracting file zipdruns.exe) is an example.</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When running macros, if the end of file was found
	when expecting an </SPAN><SPAN LANG="en-GB"><I><B>end </B></I></SPAN><SPAN LANG="en-GB">or
	</SPAN><SPAN LANG="en-GB"><I><B>else</B></I></SPAN> <SPAN LANG="en-GB">matching
	an </SPAN><SPAN LANG="en-GB"><I><B>if</B></I></SPAN><SPAN LANG="en-GB">,
	the program freezed; an error message is now delivered. Finding end
	of file when expecting a </SPAN><SPAN LANG="en-GB"><I><B>stop
	</B></I></SPAN><SPAN LANG="en-GB">matching </SPAN><SPAN LANG="en-GB"><I><B>loop</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>sprit</B></I></SPAN> <SPAN LANG="en-GB">ot
	</SPAN><SPAN LANG="en-GB"><I><B>tbrit</B></I></SPAN> <SPAN LANG="en-GB">caused
	an error, but the error message was about a RAM problem; the errror
	message now reports the end of file condition.</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	There were occassional length miscalculations during TBR (and
	possibly SPR) when there were asymmetric Sankoff character declared
	as &quot;ancestral.&quot; This was easily detected because (after
	the search concluded) there was a message saying &quot;oops?&quot;
	(this is an internal checking for consistency, still in place). The
	problems were for rearrangements resulting from moving (rerooting)
	everything but the outgroup (which could underestimate length), and
	also when the outgroup had more than a single state (or a missing
	entry) and the root had as optimal some of the states in the
	outgroup (which could overestimate length). This is fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the option to request confirmation to stop
	searches or time consuming calculations (</SPAN><SPAN LANG="en-GB"><I><B>break/</B></I></SPAN><SPAN LANG="en-GB">).
	Useful when you share office or computers with people who must click
	at every button they see?</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There were problems saving files (in Windows
	version, with </SPAN><SPAN LANG="en-GB"><U>Data/SaveData</U></SPAN><SPAN LANG="en-GB">)
	when there were complex character settings (like some states defined
	as ancestral) and trees/treegroups were being saved. Fixed now.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added </SPAN><SPAN LANG="en-GB"><I><B>freqlist</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>freqdlist</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>bremlist </B></I></SPAN><SPAN LANG="en-GB">options
	to the scripting language. These store values of support in arrays,
	to facilitate comparison. Fixed potential problems with </SPAN><SPAN LANG="en-GB"><I><B>randomlist</B></I></SPAN>
	<SPAN LANG="en-GB">and other listing options. Added </SPAN><SPAN LANG="en-GB"><I><B>windows
	</B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>linux</B></I></SPAN>
	<SPAN LANG="en-GB">keywords expressions to the scripting language
	(to identify running version).</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	For sectorial searches under sankoff parsimony, it was possible
	(although uncommon) for some actually informative characters to be
	considered uninformative during data reduction. This sometimes
	caused bogus lengths (the reduced analysis found a tree supossedly
	better, buth then replacing the small tree into the big tree
	increased length instead of decreasing it). This bug was introduced
	in the february 2004 version, which started using a better way to
	asess informativeness for the reduced sankoff characters (thus
	producing somewhat faster reduced analyses). The problem is fixed.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	New Tech Searches (autoconstrained, or using tree-fusing) froze when
	some taxa were inactive. This was because of a bug in the module
	that creates the consensus of the two trees to use as either
	constraint or as guide for fusing, which consensed without knowing
	that the number of active taxa was less than the total number of
	taxa. [ Peter Hovenkamp ] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">If some taxa were inactive and the memory was set
	for searches (the latter can be checked with the </SPAN><SPAN LANG="en-GB"><I><B>mxram
	</B></I></SPAN><SPAN LANG="en-GB">command, which reports memory
	usage), then saving/showing transformation costs used the maximum
	number of states observed in the reduced set of terminals (not the
	entire set). Likewise when saving the data in Nexus format. This
	could cause the data to be unreadable by PAUP*, or to produce
	different results if re-read with TNT.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed potential problems with changes to matrix
	after editing data (the changed characters were sometimes not
	re-checked before optimization, so that informativeness, or
	minimum/maximum number of states, could be wrong; the characters
	were rechecked before searches, so that the problem surfaced only if
	optimizations were done right after editing).</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to edit continuous characters
	from the menus, with </SPAN><SPAN LANG="en-GB"><U>Data/Edit/TaxonEdit</U></SPAN><SPAN LANG="en-GB">
	(Windows only; character mode version could already edit them with
	</SPAN><SPAN LANG="en-GB"><I><B>xread=</B></I></SPAN><SPAN LANG="en-GB">).
	</SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to create data sets </SPAN><SPAN LANG="en-GB"><I>de
	novo </I></SPAN><SPAN LANG="en-GB">(so you don't have to go through
	the text editor to get started), with </SPAN><SPAN LANG="en-GB"><U>File/New</U></SPAN><SPAN LANG="en-GB">.
	</SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Mapping characters sometimes crashed the program. Fixed now.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	There were problems reading interleaved data with some continuous
	characters, where some taxa were not defined for the block of
	continuous characters. Fixed now.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	In at least some contexts, reading scopes of taxa/characters with a
	period in the name, produced errors. Names with periods can now be
	recognized in scopes.  
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of March, 2004 (early April 2004):</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In certain contexts, the '-' sign in negative
	numbers in macro scripts was not properly handled (such that instead
	of being read as a negative number, this produced a parsing error). </SPAN>
	 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Trying to go beyond the last taxon in
	</SPAN><SPAN LANG="en-GB"><U>Data/Edit/TaxonNames </U></SPAN><SPAN LANG="en-GB">(in
	the spin control) crashed the program. </SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There was no need to dichotomize non-binary trees
	before resampling; if using as reference a consensus tree, some
	unwanted groups were created when the reference tree was
	dichotomized. This is changed now, and pre-existing trees are
	unmodified before resampling. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The MRP sometimes created a matrix with continuous characters, as
	well as other problems with character names. That's fixed now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Doing multiple random addition sequences followed
	by TBR saving a single tree per replication sometimes found
	duplicate trees (only for small, easy data sest; finding the same
	tree twice is very unlikely for larger and more complex data sets).
	This happened when the initial stage of the search (using SPR) found
	a tree not found before, but the subsequent TBR improved the tree
	and converged to a tree that had been found before; in that case,
	the tree resulting from TBR was saved even if duplicate. If the tree
	found by SPR was a duplicate, it was discarded. Note this happened
	only when saving a single tree per replication.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>export
	</B></I></SPAN><SPAN LANG="en-GB">command refused to save trees only
	(the </SPAN><SPAN LANG="en-GB"><I><B>export-</B></I></SPAN> <SPAN LANG="en-GB">option)
	when data sets had more than 10 states. </SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In Windows versions, checking the &quot;collapse
	trees after search&quot; option sometimes did not properly set the
	auto collapsing on or off. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In Windows versions, when editing data with
	</SPAN><SPAN LANG="en-GB"><U>Data/Edit/CharacterEdit</U></SPAN><SPAN LANG="en-GB">,
	there were problems when adding to a character a state larger than
	any of the preexisting states. Fixed now.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>tequal
	</B></I></SPAN><SPAN LANG="en-GB">command (summoned with
	</SPAN><SPAN LANG="en-GB"><U>Trees/Buffer/CompareTrees</U></SPAN><SPAN LANG="en-GB">)
	produced improper output when optional table format was on.</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	After changing the concavity constant for implied weights, without
	turning implied weights on, calculations of absolute bremer supports
	used floating point instead of integers. Fixed.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Frequency slope calculations were wrong when none
	of the replications displayed the group (the slope was reported as a
	negative number, intead of the actual 0 with frequency 0). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Stabilizing consensus more than once during
	driven new tech searches (</SPAN><SPAN LANG="en-GB"><I><B>xmult
	</B></I></SPAN><SPAN LANG="en-GB">command, or </SPAN><SPAN LANG="en-GB"><U>Analyze/NewTechSearch</U></SPAN><SPAN LANG="en-GB">)
	when some taxa were excluded produced the wrong results (many more
	taxa than requested were excluded after the first stabilization). </SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Tree-fusing when there were nonadditive
	characters of more than 16 states often produced wrong length
	evaluations, accepting fusings that worsened the trees instead of
	improving them. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Two problems that were not properly bugs: two portions of code
	intended to flag some bugs had not been removed after solving the
	bug they flagged. First, when the TBR swapper completed 4,000
	million clippings, the search was interrupted and the tree being
	swapped was saved to the text buffer/output file in parenthetical
	notation. Second, when doing sectorial searches, if the reduced data
	set had a specific best length (4918, I believe it was), the search
	was interrupted. This code has been removed now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the &quot;repeat&quot; option to the </SPAN><SPAN LANG="en-GB"><I><B>tfuse
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Constraint based sectorial searches (CSS) with
	asymmetric sankoff characters sometimes miscalculated length for the
	reduced data sets. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Interrupting the search during constraint based sectorial searches
	(CSS) took a long while to actually interrupt anything. This works
	faster now.  
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of early April, 2004 (May 2004):</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	If the data were packed for searches, re-setting the outgroup could
	cause a subsequent search to use the former outgroup. Now, changing
	the outgroup unpacks the data.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When the data were read as proteins, amino-acids
	were states 10-30; they are now states 0-20. For the most part, this
	is irrelevant for the user. Because of the internal treatment of the
	data, if you want to run step-matrices for protein data, though,
	having the amino-acids as 0-20 insrtead of 0-30 should run
	considerably faster.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When data are read as mixed types, all the
	characters were reset as alpha-numeric. Now, each type preserves its
	identity. Since this creates ambiguities when you want to
	subsequently read (say) transformation costs for sankoff characters
	(is an A an adenine in DNA, or state number 10 in an alphanumeric
	character?), you can now define how you want the states to be read
	in subsequent commands, with the </SPAN><SPAN LANG="en-GB"><I><B>nstates/type
	</B></I></SPAN><SPAN LANG="en-GB">(where </SPAN><SPAN LANG="en-GB"><I><B>type</B></I></SPAN>
	<SPAN LANG="en-GB">is num, dna, or prot). </SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When reading taxon names with some symbols, a warning was issued
	telling the user that the symbol would be changed to an underscore,
	but the name was not actually changed. This created problems at the
	time of saving trees in parenthetical notation using taxon names.
	This is fixed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Error messages were not sometimes properly displayed, especially
	when macros were enabled. There may still be exceptions, but display
	was improved. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>fuse</B></I></SPAN>
	<SPAN LANG="en-GB">option to the drift and ratchet commands. This
	fuses the trees found in a specified number of iterations, which
	sometimes produces a better tree.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Continuous characters cannot be mapped in color,
	but if Color Mapping was on, they were mapped anyway, as all gray
	(=ambiguous). They are mapped using numbers now, regardless of
	setting for Color Mapping.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">For continuous characters, if the ranges were
	given so that the first number was smaller than the second, all
	length calculations were wrong (the &quot;minimum&quot; was then
	larger than the &quot;maximum&quot;). The program now stores the
	min/max numbers in the right order.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In scripts or macros, comparisons (i.e. &gt;, &gt;=,
	==, &lt;, &lt;=) between floating point numbers were sometimes not
	properly done. The numbers were converted into integers for the
	comparison. This is fixed now. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	For continuous characters, ranges in lists of common synapomorphies,
	or in lists and tree-maps of common optimizations, had errors. Fixed
	now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">After a mult search, with continuous characters
	and implied weighting turned off, some (or all) of the best trees
	found were not saved (this sometimes produced searches where no
	trees were found). This was because of rounding errors in score
	calculations (continuous characters, not having been planned from
	the beginning, are a hybrid between integer and floating point
	calculation). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The states for protein data sets were sometimes
	not properly displayed. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The number of rearrangements to accept during the
	perturbation phase of tree-drifting for large sectors (in sectorial
	searches) was the same as the number set for drifting the complete
	tree. This was ok if the perturbation was set to be abandoned when
	some percentage of the swapping was completed (the default), but
	otherwise, the perturbation phase for sectors could have gone on for
	longer than necessary. Now, the number of rearrangements to accept
	is set (during sectorial searches) to be no more than the number of
	taxa divided by 2 (or 30, if sector has less than 60 taxa). Note
	that some searches done with the old implementation could
	conceivably produce now different results. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The minimum/maximum numbers of characters (and
	thus informativeness) of characters was sometimes not changed after
	editing data (under Windows, or using the </SPAN><SPAN LANG="en-GB"><I><B>xread=</B></I></SPAN>
	<SPAN LANG="en-GB">option). Fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When reading interleaved matrices, the progress
	bar sometimes had problems (even going totally out of scale and
	never finishing). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When there were continuous characters, and some
	characters were deactivated, there were problems with the </SPAN><SPAN LANG="en-GB"><I><B>minmax
	</B></I></SPAN><SPAN LANG="en-GB">command (displaying
	minimum/maximum numbers of steps usually crashed the program). Fixed
	now. </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of May 2004 (June 2004): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Saving the trees to RAM when finding out which
	nodes to cut to improve the consensus
	(Trees/Comparisons/PrunedTrees, or </SPAN><SPAN LANG="en-GB"><I><B>pruntree
	</B></I></SPAN><SPAN LANG="en-GB">command) saved the trees in a
	format that was difficult to interpret. The trees are now saved with
	all the taxa, and placing the pruned taxa at the base of the tree
	(if all the trees are rooted at the same taxon, the pruned taxa will
	be outside the root taxon). This adds one extra node to the tree, so
	that the number of nodes gained is actually the number of nodes in
	saved tree minus the number of nodes in the complete consensus,
	minus 1. </SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	With some groups constraints defined (from windows dialog, positive
	constraints with floating taxa), constrained searches under implied
	weights sometimes crashed the program (there was no problem under
	prior weights). Fixed now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the possibility to read continuous
	characters as mean followed by standard deviation (assigns from mean
	minus SD, to mean plus SD). Instead of separating the two values
	with -, use the minus/plus symbol (ASCII 241). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When deactivating some blocks of characters, the
	outgroup was always set as the first active taxon, even if the
	current outgroup remained active. The outgroup is now changed only
	if the current outgroup becomes inactive. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Reading data as interleaved, the error message when there too many
	or too few characters for a taxon in a given block was always that
	there were &quot;too many&quot; characters for the taxon (except for
	the very first block, where the message was ok). Error message
	corrected now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The maximum state for continuous characters is
	now 65.000 instead of 50.000. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>nozerowt
	</B></I></SPAN><SPAN LANG="en-GB">option to the </SPAN><SPAN LANG="en-GB"><I><B>resample
	</B></I></SPAN><SPAN LANG="en-GB">command (valid only for </SPAN><SPAN LANG="en-GB"><I><B>sym
	</B></I></SPAN><SPAN LANG="en-GB">resampling). Instead of deleting
	characters with the same probability as upweighting them, this
	divides the weight by 2. The difference is that this identifies
	conflict only. Groups supported by some characters and contradicted
	by none appear with the maximum support (regardless of the number of
	characters supporting the group). </SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A rather harmless bug that looked deadly: when all the characters
	had the same weight, but different from unity, and implied weights
	was turned off, the lengths reported during a search corresponded to
	unitary weights for the informative characters (plus the weighted
	steps for the uninformative ones). Thus, optimizing the trees
	produced by a search resulted in huge discrepancies. Note that in
	most cases this could not have produced any problems, since the best
	trees continue being the same ones (the only difference could have
	been when a value of suboptimal was set, because then , for uniform
	weights of N, the effective value of suboptimal during searches
	would have been actually 1/N). This is fixed now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There were problems displaying the names for
	continuous characters (for which the states cannot be named). </SPAN>
	 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Deactivating data blocks with only continuous characters kept taxa
	with only missing entries as active. Fixed now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the &quot;!&quot; option to the </SPAN><SPAN LANG="en-GB"><I><B>pruntax
	</B></I></SPAN><SPAN LANG="en-GB">command (it prunes all the taxa
	that are not active). </SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Saving trees in compact form when some taxa were missing from the
	trees freezed the program (or could create other anomalies). This
	was because the missing taxa were supossed to be added to the tree,
	but the addition had some problems. Fixed now.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Determining active blocks with scopes didn't work (i.e. blocks had
	to be specified one by one). Fixed.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Sometimes the </SPAN><SPAN LANG="en-GB"><I><B>if</B></I></SPAN><SPAN LANG="en-GB">-</SPAN><SPAN LANG="en-GB"><I><B>else
	</B></I></SPAN><SPAN LANG="en-GB">did not behave as expected
	(problems were created sometimes when loops were included within the
	</SPAN><SPAN LANG="en-GB"><I><B>else </B></I></SPAN><SPAN LANG="en-GB">part).
	Fixed now.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There were problems with the </SPAN><SPAN LANG="en-GB"><I><B>mxproc
	</B></I></SPAN><SPAN LANG="en-GB">command (specially when used from
	within files), that caused crashes or unexpected behaviour. Fixed
	now.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In some versions, saving the matrix counted the
	number of taxa as the number of active taxa, even when all the taxa
	were being saved. This created matrices that could not be read
	without edition.</SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When resampling, if trees were to be collapsed with less than SPR or
	TBR (which is the recommended collapsing for real cases), sometimes
	groups with no real character support were retained in a replicate,
	thus distorting group frequencies. The effect could be quite
	drammatic when there were few supported groups. This is fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added an option that facilitates reading trees or
	defining constraints: taxon names can be specified as multiple taxa,
	using three periods (?) at the end of the name, in which case all
	the taxa matching the name are considered (in the case of trees, all
	the taxa that match the name and had not been yet placed in the
	tree). This is in effect only when reading trees in parenthetical
	notation, and when defining constraints. </SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Groups of trees, taxa or characters were lost when the number of
	trees was changed. They are kept now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added something that could be useful only in very
	specific circumstances: the option to increase the random seed, in
	multiple randomizations, by a fixed amount for each replication
	(with the </SPAN><SPAN LANG="en-GB"><I><B>rseed:N</B></I></SPAN><SPAN LANG="en-GB">
	option), instead of generating a new random seed and making sure
	it's different from all the previous ones. This is something that
	could be useful only in very specific circumstances, e.g. when a
	very large number of randomizations is to be done, but each of which
	takes very little time of analysis. In those cases, checking that
	each new seed is different may take some extra time. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Fixed potentially dangerous code in calculation of consensus other
	than strict (combinable components, majority, or frequency
	differences). This might under some circumstances have affected the
	results (hard to detect) or caused crashes. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the option to find which taxa to prune to
	improve combinable component consensus (</SPAN><SPAN LANG="en-GB"><I><B>pruncom
	</B></I></SPAN><SPAN LANG="en-GB">command). Changed the name of the
	command to improve strict consensus (formerly called </SPAN><SPAN LANG="en-GB"><I><B>pruntree</B></I></SPAN><SPAN LANG="en-GB">)
	to </SPAN><SPAN LANG="en-GB"><I><B>prunnnelsen</B></I></SPAN><SPAN LANG="en-GB">.
	Note that for large numbers of taxa the command for combinable
	components may be significantly slower than the one for strict
	consensus. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the macro expression </SPAN><SPAN LANG="en-GB"><I><B>flipd</B></I></SPAN><SPAN LANG="en-GB">.
	This calculates the </SPAN><SPAN LANG="en-GB"><I>flip distance</I></SPAN>
	<SPAN LANG="en-GB">between a matrix and a tree (see Eulenstein et
	al., 2004. Performance of flip supertree construction with a
	heuristic algorithm. Syst. Biol. 53:299-308). The matrix (which will
	normally be created with the </SPAN><SPAN LANG="en-GB"><I><B>mrp
	</B></I></SPAN><SPAN LANG="en-GB">command) must have only binary,
	non sankoff, discrete characters. Two macros, </SPAN><SPAN LANG="en-GB"><I><B>xactflip.run
	</B></I></SPAN><SPAN LANG="en-GB">(which calls the addflip.run
	routine) and </SPAN><SPAN LANG="en-GB"><I><B>macswap.run </B></I></SPAN><SPAN LANG="en-GB">were
	added to zipdruns.exe (feel free to modify them to suite your
	needs). These macros calculate supertrees, either by
	branch-and-bound or heuristics, as described in Eulenstein et al.</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>setloop
	</B></I></SPAN><SPAN LANG="en-GB">command created problems when
	within a </SPAN><SPAN LANG="en-GB"><I><B>sprit </B></I></SPAN><SPAN LANG="en-GB">or
	</SPAN><SPAN LANG="en-GB"><I><B>tbrit </B></I></SPAN><SPAN LANG="en-GB">command.
	Fixed.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When positive groups constraints were read (or
	positive constraints with floating taxa were defined from the
	menus), there were problems when the number of groups was not an
	exact multiple of 16. There were also problems when some of the
	groups defined were not informative (i.e. could never be
	non-monophyletic). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Drawing the trees in parenthetical notation
	(</SPAN><SPAN LANG="en-GB"><I><B>tplot</B></I></SPAN><SPAN LANG="en-GB">*
	option) created problems (crashes) when the trees were not binary.
	Fixed.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Definitions of tree groups were not changed when
	randomizing the tree order (</SPAN><SPAN LANG="en-GB"><I><B>rand/</B></I></SPAN><SPAN LANG="en-GB">
	command). This is fixed now. Note that randomizing tree order,
	defining tree groups, and then changing the number of maxtrees (</SPAN><SPAN LANG="en-GB"><I><B>hold
	</B></I></SPAN><SPAN LANG="en-GB">command) de-randomizes the tree
	sequence, and changes the definitions of tree groups accordingly. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the option to save or draw the last tree in
	memory using commands (</SPAN><SPAN LANG="en-GB"><I><B>tplot/</B></I></SPAN><SPAN LANG="en-GB">
	or </SPAN><SPAN LANG="en-GB"><I><B>tsave/ </B></I></SPAN><SPAN LANG="en-GB">options).
	You could do this before by turning macros on, setting a variable to
	the number of the last tree, and then saving the tree 'variable'.
	The </SPAN><SPAN LANG="en-GB"><I><B>tplot/</B></I></SPAN><SPAN LANG="en-GB">
	or </SPAN><SPAN LANG="en-GB"><I><B>tsave/</B></I></SPAN><SPAN LANG="en-GB">
	options are simpler. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to calculate agreement subtrees
	(i.e. find out which taxa have to be pruned from the input trees to
	make them identical). This is implemented with the </SPAN><SPAN LANG="en-GB"><I><B>prunnelsen
	</B></I></SPAN><SPAN LANG="en-GB">command, with the + and ! options
	(see help for </SPAN><SPAN LANG="en-GB"><I><B>prunnelsen</B></I></SPAN><SPAN LANG="en-GB">).
	The algorithms are either exact (+), which can be </SPAN><SPAN LANG="en-GB"><I>very
	</I></SPAN><SPAN LANG="en-GB">time consuming for cases where the
	trees are not very similar (i.e. they have a poorly resolved
	consensus), or approximmate (!), which are pretty fast but can be
	used only for binary input trees. The approximmate algorithms find
	sets of taxa for which the input trees are identical, but the sets
	of taxa may not be the largest ones. The approximmate algorithms are
	faster than those in PAUP* (agree command; note that the equivalent
	in PAUP* requires that the trees be rooted, since calculating
	unrooted agreement subtrees, which TNT doesn't do, is much more
	costly), but often find subtrees which are not maximal (usually
	within 10% of the actual maximum). Note that the agreement subtree
	maximizes the number of shared terminal taxa, not the number of
	shared groups (the two are the same when input trees are binary, but
	may be different when input trees have polytomies).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">RNA data (with U instead of T) can now be read.
	Note the U is read (and mapped, etc.) as if it was a T. </SPAN>  
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of June, 2004 (July 2004): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to read comments in Nexus
	files. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In Nexus files, taxon names that are too long now
	produce a warning instead of an error. The &quot;endblock&quot;
	command was not recognized before (only &quot;end&quot;).
	Truncations of &quot;endblock&quot; are now recognized. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>hold+</B></I></SPAN>
	<SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>hold- </B></I></SPAN><SPAN LANG="en-GB">options
	(see </SPAN><SPAN LANG="en-GB"><I><B>help hold</B></I></SPAN><SPAN LANG="en-GB">).
	</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	TBR or SPR searches under implied weights miscalculated scores when
	there were several characters with more than 4 states and less than
	9. The score was recalculated exactly after the search, so that
	everything seemed ok, but this could cause the program to miss some
	better trees during the search, without the user becoming aware. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>flipd
	</B></I></SPAN><SPAN LANG="en-GB">expression returned the number of
	flips without counting the terminals. </SPAN>Eulenstein et al. <SPAN LANG="en-GB">(see
	above) do not specify that terminals are to be included in the
	matrix representation of the tree to be evaluated, but that is the
	only way to reproduce the numbers of flips reported by their
	program, Rainbow. </SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Saving trees in compact form when some taxa were
	inactive created difficulties for subsequent comparisons of trees
	(node numbers were not properly reassigned after inserting the
	missing taxa at the base opf the tree). Trees that were identical
	could be evaluated as different. Fixed now. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added </SPAN><SPAN LANG="en-GB"><I><B>isdup </B></I></SPAN><SPAN LANG="en-GB">to
	the list of macro expressions. </SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Calculating differences of frequencies for the groups of a reference
	tree caused crashes when the tree itself was not included in the set
	of trees. Fixed.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	There were problems reporting synapomorphies as lists (cases where
	state sets were identical were reported as synapomorphies), and when
	some characters were inactive (inactive characters could be reported
	as synapomorphies, or active characters could be mist). This bug had
	probably been introduced when adding continuous characters. Fixed
	now. [Julian Faivovich]  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Running ratchet searches with autoconstraints
	sometimes crashed the program. Fixed now. [</SPAN> Jarno Tuimala] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 The <I><B>tcomp </B></I>command (comparison of trees) did not check
	whether the numbers of the trees to compare corresponded to trees in
	memory (for example, you could compare trees 5 and 6 when having
	only 2 trees in memory). The results were meaningless (and possibly
	could have caused crashes). The program now checks to make sure the
	tree numbers requested do exist.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	It is possible now to open a metafile so that subsequent
	tree-drawing commands save their tree(s) to that metafile (Windows
	only). Before, it was necessary for the user to be present, and when
	the tree pre-viewing window opened, to press M. Now, a metafile can
	be opened with File/OutputFile/OpenMetafile; this can be saved to
	batch menu instructions. To play it safe, it is better not to save
	many trees to one metafile (the file may become rather large); I
	advice to close the metafile, and open a new one for each tree, if
	you intend to save many trees. You can use this option, for example,
	to have tree-resampling calculations output their tree right to the
	file. [Rudolf Meier] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Trees in Nexus format were always saved using taxon numbers, even if
	&quot;use taxon names&quot; was on. Fixed. [Rudolf Meier] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added option to undefine tree, taxon, or
	character groups (with - followed by the number or name of group(s)
	to undefine).</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added option to save tree-tags in a readable form
	(</SPAN><SPAN LANG="en-GB"><I><B>ttag</B></I></SPAN><SPAN LANG="en-GB">/
	option).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Sometimes there were problems when a tree was
	optimized, then some (but not all) continuous characters were
	deactivated, and the tree were optimized again. In such a case, the
	length could include the steps calculated before deactivation of the
	deactivated continuous characters. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Linux versions include now the possibility to
	buffer previous commands, so that they can be recalled using the
	arrow keys. This is optional, and is turned on with </SPAN><SPAN LANG="en-GB"><I><B>lintrees*
	</B></I></SPAN><SPAN LANG="en-GB">(once connected, it cannot be
	turned off). </SPAN> 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/Changes
to version of July, 2004 (August 2004): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Attempting to </SPAN><SPAN LANG="en-GB"><I><B>export
	</B></I></SPAN><SPAN LANG="en-GB">data or trees without providing a
	file name (which you were not supossed to do, anyway), crashed the
	program or caused unexpected behaviour. [Serita Von Groningen] </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Creating a new data set and editing it (under Windows versions)
	caused crashes. This bug had probably been added in May, 2004 (when
	added option to preserve the identity of the type of characters in
	the matrix). Fixed.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Labels on tree-branches (</SPAN><SPAN LANG="en-GB"><B>ttag
	</B></SPAN><SPAN LANG="en-GB">command) were not properly saved. They
	are now.  </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The Windows version updated its icons/menus too often, even when
	nothing had been done. This was annoying sometimes.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In the Windows version, it is now possible for
	the user to set the colors for the tree branches (useful for
	preparing presentation of results). For this, the tree must be
	&quot;unlocked,&quot; the &quot;pre-view trees&quot; option must be
	on, and the &quot;map characters in color&quot; option must be on.
	When you map a character, double clicking the right button on a
	node, sets all the descendants of the node to the color of the
	specified state (0-9). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>riddup
	</B></I></SPAN><SPAN LANG="en-GB">command (get rid/reinsert
	duplicate taxa). Duplicate taxa cannot change the tree length, so
	deactivating, searching, and reinserting, produces identical results
	when there are numerous duplicates. </SPAN> 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of August, 2004 (September 2004): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Mac OS X versions: fixed problems with
	saving/reading trees in compact notation (it is now possible to
	exchange trees with the Linux/Windows versions); fixed problems with
	text-viewer; fixed problems with reporting RAM usage (bogus amounts
	of RAM were reported). Added possibility to read file names with
	spaces (as in the windows versions, see above, this is done by
	typing &quot;^&quot; instead of the space). </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to read files in other
	directories, to both Mac OS X and Linux versions. </SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Nothing significant done to the Windows versions.</SPAN>
	 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of September, 2004 (November 2004): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the possibility to have any number of
	tree-groups. This was added so that the (Linux) parallel version of
	TNT can deal more easily with its tasks; for compatibility, it was
	added also to the other versions. The maximum number of groups to
	store is set with tgroup+N; this must be done </SPAN><SPAN LANG="en-GB"><I>before</I></SPAN>
	<SPAN LANG="en-GB">reading the data set (it cannot be changed </SPAN><SPAN LANG="en-GB"><I>after</I></SPAN>
	<SPAN LANG="en-GB">reading the data set). Any number of groups can
	be stored (but keep in mind that this uses memory; if you're not
	planning to actually use them for anything, just stick to the
	default 32 groups). </SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the possibility to auto-save the results
	every a specified time interval. This is the &quot;!&quot; option of
	the </SPAN><SPAN LANG="en-GB"><I><B>tsave </B></I></SPAN><SPAN LANG="en-GB">command
	(see online help for </SPAN><SPAN LANG="en-GB"><I><B>tsave</B></I></SPAN><SPAN LANG="en-GB">).</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">A bad bug in the macro language… The checking
	of the dimensions for multi-dimensional arrays had a bug, such that
	subscripting a multi-dimensional array with a value from a
	multi-dimensional array could cause problems. Example: ray1 and
	ray2, both of dimensions 10x10, with value ray[9 9] = 0; then:   set
	ray1 [ 0 'ray2[9 9]' ]  0.5555 ; should have been interpreted as
	setting ray1[ </SPAN><SPAN LANG="en-GB"><B>0</B></SPAN> <SPAN LANG="en-GB">0
	] to 0.5555, but instead this was interpreted as setting ray1[ </SPAN><SPAN LANG="en-GB"><B>9
	</B></SPAN><SPAN LANG="en-GB">0 ] to 0.5555 (the first dimension of
	the array inside the brackets was taken as the first dimension of
	ray1).This is fixed now. </SPAN> 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Displaying
	the weighting function (if implied weights was on when the data were
	read) if the buffers were prepared for optimization (or searches)
	caused problems if it was followed immediately by an optimization
	(or search).Fixed.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 In the macro expressions <I><B>ismono </B></I>and <I><B>comnod</B></I>,
	it is now possible to read the set of nodes as a scope (referring to
	taxon groups, or to tree nodes).  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Windows
	versions only: a problem that was added to some recent versions (and
	therefore did not exist in earlier versions), was that sometimes
	(e.g. when doing repeated searches in scripts) the status window was
	erased and did not show up again. This is hopefully fixed now
	(different versions of Windows may still have some problems with
	this?).  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Windows
	versions only: under tree-view mode, if the command line was open,
	pressing &lt;enter&gt; or &lt;tab&gt; switched focus to the
	(non-visible) command line.Fixed.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Reporting the number of replications for mult (either with the
	<I><B>mult:; </B></I>option or with
	Analyze/ShowParameters/RandomAdditionSeqs) actually displayed the
	number of trees to hold per replication, not the number of
	replications.Fixed now. [Martin Ramirez] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 The program did not issue an error message if some continuous
	characters were preceded by some discrete ones, which was incorrect
	input format.This caused errors in length calculations and in
	optimizations.An error message is now issued. [Diego Pol, Dan
	Janies] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Matrices
	with large numbers (&gt;10,000) of continuous characters sometimes
	caused an error message to be displayed, reporting an internal error
	in TBR calculations.This was because the length calculations during
	searches sometimes differed from the true length (calculated with a
	complete optimization) in more than the error margin (set to
	10xe-11), due to rounding errors.This should not have caused any
	other problem than alarm in the user. The error margin has now been
	set to 10xe-8, so this is prevented. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Linux versions: added possibility to run in parallel, using the PVM
	system. PVM can be downloaded from <A CLASS="western" HREF="http://www.netlib.org/pvm3"><FONT COLOR="#0000ff"><SPAN LANG="en-US"><U>http://www.netlib.org/pvm3</U></SPAN></FONT></A>.
	A single command, <I><B>ptnt</B></I>, has been added for handling
	the parallel jobs. See the online help for the options on using the
	<I><B>ptnt</B></I> command. This is a new and complex option, and so
	it may still be somewhat unstable or cause crashes/errors. 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of November, 2004 (December 2004): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When reading tree files, if the file contains
	more trees than maxtrees, maxtrees is now automatically reset (as
	long as enough free RAM is available) instead of causing an error
	message. Likewise for calculating a consensus to be stored in
	memory.</SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The amount of RAM for macros, and the number of loops/user
	variables, can now be set with (simple) expressions (i.e. operations
	within parentheses). This makes it possible for a macro routine to
	adjust these parameters automatically for different numbers of
	taxa/characters/trees. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">As long as enough RAM is available, the
	constraint definitions now do </SPAN><SPAN LANG="en-GB"><I><B>not
	</B></I></SPAN><SPAN LANG="en-GB">have to be reset after changing
	maxtrees. This sounds very simple, but TNT is very parsimonious with
	its memory usage, and thus this is not so simple as it sounds. It
	did take me a while to find the strength and stamina to implement
	it. It's done now.  </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug introduced in the version of november, 2004: the timeout for
	searches could not be set, either from the menus or with commands.
	This is fixed now.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Resetting maxtrees, or randomizing tree order, when low amounts of
	free RAM were available, could cause crashes. Fixed now.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The parallel routines of TNT (Linux versions
	only) were made more stable and less prone to crashes/deadlocks;
	several options were added to the </SPAN><SPAN LANG="en-GB"><I><B>ptnt
	</B></I></SPAN><SPAN LANG="en-GB">command (</SPAN><SPAN LANG="en-GB"><I><B>again</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>goto</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>skipto</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>hgroup</B></I></SPAN><SPAN LANG="en-GB">);
	added a bunch of macro expressions to the parallel versions.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">For large data sets, the TBR branch swapper was
	speeded up (TBR is now from 10% to 30% faster, sometimes more,
	depending on the data sets; the cleaner and larger the data set, the
	bigger the gain). Gains are less significant for characters with
	16-32 states, and for Sankoff/continuous characters.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the * option to the </SPAN><SPAN LANG="en-GB"><I><B>copytree
	</B></I></SPAN><SPAN LANG="en-GB">command (see online help).</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	DNA data sets with gaps could not be saved in Nexus format (the
	program complained that more than 4 states were present, even if the
	fifth state was a &quot;legal&quot; DNA state). Fixed now.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Running a constraint-based sectorial search without having turned
	the constraints on (which was not supossed to be done!) sometimes
	caused the program to crash. An error message is now issued.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed a problem with the macro expressions
	</SPAN><SPAN LANG="en-GB"><I><B>isinagroup</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>isintgroup</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>isinxgroup</B></I></SPAN><SPAN LANG="en-GB">,
	that had arisen when introducing urestricted numbers of tree groups.</SPAN>
		</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of December, 2004 (January 2005): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Fixed problems closing metafiles to automatically save tree
	diagrams. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Fixed some glitches with macros (i.e. problems reading variables as
	strings in macros; user progress report flashing). 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Windows versions only: re-setting parameters for
	macros (with </SPAN><SPAN LANG="en-GB"><U>Settings</U></SPAN><SPAN LANG="en-GB">/</SPAN><SPAN LANG="en-GB"><U>Memory</U></SPAN><SPAN LANG="en-GB">)
	caused an error if macros were on (this bug was added to the
	december 2004 version, when changing the way in which macro
	parameters are read). Fixed now. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The number of max. trees was reset only if max. trees was reached
	while reading the trees, but not if memory was already full when
	starting to parse the tree file.  A foolish distraction on my part!!
	 Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	In Linux versions, running searches under implied weights sometimes
	crashed the program.  This was an error apparently due to some
	problem in how gcc 2.96 treats doubles and floating point numbers;
	some compilations were ok, others weren't.  The version posted up in
	the web in december did have the problem.  The problem is hopefully
	fixed for good (i.e. a workaround to make sure the compiler doesn't
	screw things up is now used in Linux versions). 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When a block of continuous characters that did not include all taxa
	was followed by a block of data in dna format (i.e. indicated with
	the &amp;[dna] ), the taxa not defined in the continuous block were
	considered as having state 65.535, instead of the range 0 - 65.535
	(i.e. all possible values).  This did not happen when the taxa were
	explicitly defined as missing for all the characters in the
	continuous block.  Fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added a progress bar to the </SPAN><SPAN LANG="en-GB"><I><B>riddup
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Printing tables in default format (e.g. minimum/maximum number of
	steps) with floating point numbers (e.g. with continuous characters)
	for large numbers of values (e.g. many characters) crashed the
	program.  Fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>sibyl
	</B></I></SPAN><SPAN LANG="en-GB">option to the </SPAN><SPAN LANG="en-GB"><I><B>resample
	</B></I></SPAN><SPAN LANG="en-GB">command.  This is intended as a
	test of stability, achieved by comparing the results that would have
	been obtained if analyzing a data set with fewer characters with the
	results obtained for the complete data set.  This checks whether a
	group supported for the reduced data set is supported/compatible
	with the results for the complete data set; the group may well be
	absent from all the trees for the complete data set; this does not
	measure support for groups. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>lastsibyl
	</B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>lastsupp
	</B></I></SPAN><SPAN LANG="en-GB">expressions to the scripting
	language. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Analyzing resampled data sets using the ratchet caused the original
	weights to be improperly buffered, thus the results were wrong.
	Fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the = option to the </SPAN><SPAN LANG="en-GB"><I><B>tcomp
	</B></I></SPAN><SPAN LANG="en-GB">command (it calculates retention
	indices, which are similar to distortion coefficients, for mapping
	of some trees onto others).  Also added the </SPAN><SPAN LANG="en-GB"><I><B>discoeff
	</B></I></SPAN><SPAN LANG="en-GB">expression to the scripting
	language. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Certain combinations of number of replications,
	with certain numbers of ratchet iterations, of the </SPAN><SPAN LANG="en-GB"><I><B>mult
	</B></I></SPAN><SPAN LANG="en-GB">command, caused a &quot;heap
	deallocation&quot; error message.  This is fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Some problems with merging DNA data sets were
	fixed.  Some may remain; </SPAN><SPAN LANG="en-GB"><I><B>dmerge </B></I></SPAN><SPAN LANG="en-GB">is
	a tricky command. [Kurt Picket] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Macros were not allowed as part of the
	instructions for </SPAN><SPAN LANG="en-GB"><I><B>resample </B></I></SPAN><SPAN LANG="en-GB">or
	</SPAN><SPAN LANG="en-GB"><I><B>qnelsen</B></I></SPAN><SPAN LANG="en-GB">;
	they are now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the possibility to convert user variables
	to series of values.  If </SPAN><SPAN LANG="en-GB"><B>array</B></SPAN><SPAN LANG="en-GB">
	is defined as an array, then 'array[x-y]' is expanded to the series
	of values x through y in the array (separated by a blank space).  
	If y is followed by &quot;&amp;N&quot; then ASCII character number N
	is used as separator; otherwise a blank (ASCII 32) is used for all
	values. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>impwtlist
	</B></I></SPAN><SPAN LANG="en-GB">expression to the scripting
	language.  This sets an array to the implied weights (writing to
	global variable </SPAN><SPAN LANG="en-GB"><I><B>listsize </B></I></SPAN><SPAN LANG="en-GB">the
	number of values written in the array, which must be large enough to
	hold the values).  This can be used to easily modify existing
	weighting functions.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Condensing trees when filtering (</SPAN><SPAN LANG="en-GB"><I><B>best
	</B></I></SPAN><SPAN LANG="en-GB">or </SPAN><SPAN LANG="en-GB"><I><B>unique
	</B></I></SPAN><SPAN LANG="en-GB">commands, option
	</SPAN><U>Trees/TreeBuffer/Filter</U><SPAN LANG="en-GB">) when
	collapsing rule was SPR or TBR caused the wrong trees to be retained
	(sometimes, no trees at all!).  This is fixed. </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to version of January, 2005 (February 2005): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">the</SPAN>  <SPAN LANG="en-GB"><I><B>resample
	sibyl </B></I></SPAN><SPAN LANG="en-GB">option could sometimes crash
	the program.  The problem was in some memory allocations when
	calculating the RI's (specially if the trees were well resolved). 
	Also, added a reciprocal RI calculation to the sibyl option (the
	first value is the best value of the dummies if the consensus of the
	reduced data set, mapped onto the original tree(s); the second value
	is best value of the dummies for each of the original trees, mapped
	onto the consensus of the reduced data set).  The reciprocal
	calculation was added because the fact that trees for the reduced
	data set are typically less resolved, this artificially inflates the
	RI when there is very little resolution in the reduced data sets.</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>flat, </B></I></SPAN><SPAN LANG="en-GB">
	</SPAN><SPAN LANG="en-GB"><I><B>rflat</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>flatnumsubs </B></I></SPAN><SPAN LANG="en-GB">options
	to the </SPAN><SPAN LANG="en-GB"><I><B>drift </B></I></SPAN><SPAN LANG="en-GB">command.
	 These define a different (probably lower, and possibly 0) value of
	relative fit difference (</SPAN><SPAN LANG="en-GB"><I><B>rflat</B></I></SPAN><SPAN LANG="en-GB">)
	for the first N iterations of drifting (</SPAN><SPAN LANG="en-GB"><I><B>flat
	N</B></I></SPAN><SPAN LANG="en-GB">), which will use a different
	number of substitutions in the tree (</SPAN><SPAN LANG="en-GB"><I><B>flatnumsubs</B></I></SPAN><SPAN LANG="en-GB">).
	 This is intended to be useful at a stage where by swapping equally
	(or almost equally) parsimonious trees we would still find better
	trees; only when the swapping gets stuck, it becomes more important
	to accept suboptimal trees. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>discoeff
	</B></I></SPAN><SPAN LANG="en-GB">macro expression sometimes had
	problems when taxa were excluded from the trees (particularly, taxon
	0).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: There were problems with
	</SPAN><SPAN LANG="en-GB"><I><B>percdone</B></I></SPAN><SPAN LANG="en-GB">
	(and possibly other macro expressions pertaining to values in
	slaves) when several parallel jobs were running at the same time.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: When large tree sectors
	were spawned in parallel from a group of trees (instead of all
	sectors being taken from a single tree), the </SPAN><SPAN LANG="en-GB"><I><B>sector
	N </B></I></SPAN><SPAN LANG="en-GB">option of the </SPAN><SPAN LANG="en-GB"><I><B>ptnt
	</B></I></SPAN><SPAN LANG="en-GB">command could freeze sometimes
	(</SPAN><SPAN LANG="en-GB"><I><B>sector *N </B></I></SPAN><SPAN LANG="en-GB">required
	input from a single tree, thus it didn't have this problem). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: The </SPAN><SPAN LANG="en-GB"><I><B>slaveget
	</B></I></SPAN><SPAN LANG="en-GB">option worked ok when the variable
	to get from the slaves was the last variable defined and no values
	had been read/set for other arrays; if other variables were defined
	subsequently, and/or read/set subsequently, slaveget could easily
	get into trouble (e.g. causing unjustified warnings, or getting
	improper values).  This is fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: The </SPAN><SPAN LANG="en-GB"><I><B>help
	</B></I></SPAN><SPAN LANG="en-GB">command did not include help for
	</SPAN><SPAN LANG="en-GB"><I><B>ptnt hgroup</B></I></SPAN><SPAN LANG="en-GB">.
	 It's there now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Mac versions: a serious bug in the january 2005
	version (due both to changes in compilers and to the addition of the
	command recalling system): displaying large trees to the console
	caused some of the subsequent output to be screwed up, specially for
	reading commands.  This problem did not surface if you were working
	with </SPAN><SPAN LANG="en-GB"><I><B>silent=con </B></I></SPAN><SPAN LANG="en-GB">and
	then using </SPAN><SPAN LANG="en-GB"><I><B>view; </B></I></SPAN><SPAN LANG="en-GB">to
	view the results, only if you had the (default) </SPAN><SPAN LANG="en-GB"><I><B>silent
	– con</B></I></SPAN><SPAN LANG="en-GB">.  This is fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Windows menu versions only: Saving data sets with
	additional numbers of taxa and characters (</SPAN><SPAN LANG="en-GB"><U>Data/SaveData</U></SPAN><SPAN LANG="en-GB">)
	produced files that were not readable (i.e. only the additional
	characters were saved for the additional taxa, so that the new taxa
	had fewer characters than the others). </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of February, 2005 (March 2005): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	In protein data, the dash (-) was read as missing, not as gap (i.e.
	state 21), which is probably the usual treatment for the symbol.
	[Usman Roshan] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>smatrix
	</B></I></SPAN><SPAN LANG="en-GB">command could read only
	step-matrices for up to 10 states.  This has been changed now, and
	up to 32 states can be read. [Usman Roshan] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the + option to the </SPAN><SPAN LANG="en-GB"><I><B>var
	</B></I></SPAN><SPAN LANG="en-GB">macro command.  This produces a
	very simple graph of one or two user variables. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: added the </SPAN><SPAN LANG="en-GB"><I><B>tasksatsch
	</B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>schalg
	</B></I></SPAN><SPAN LANG="en-GB">macro expressions (see online
	help). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: running a loop within a
	slave job that was being called from within a loop caused problems. 
	The #N symbol was replaced when parsing the instructions for the
	slave, so that, within the slave, it always referred to the value in
	the loop of level N outside the slave.  Now, the #N symbols refers
	to the loop of level N within the slave; if you want to access the
	value of loop of level N outside the slave (i.e. in the parent),
	then set a user variable before giving the instructions to the
	slave.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: &quot;spying&quot; trees
	from slaves (</SPAN><SPAN LANG="en-GB"><I><B>ptnt spy </B></I></SPAN><SPAN LANG="en-GB">option)
	when a slave was doing a sectorial search caused the wrong trees to
	be transferred to the master (handling the trees received caused
	crashed, freezes).  Fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: the macro expression
	</SPAN><SPAN LANG="en-GB"><I><B>numhosts </B></I></SPAN><SPAN LANG="en-GB">used
	the number of hosts in the last ptnt call; now, it uses the current
	state of the virtual machine. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: when added the
	possibility to create groups of hosts, the string </SPAN><SPAN LANG="en-GB"><I><B>myself</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>parent</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>master </B></I></SPAN><SPAN LANG="en-GB">were
	no longer recognized as names of hosts.  They are recognizable
	again. [Diego Pol] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: added the </SPAN><SPAN LANG="en-GB"><I><B>mnemonic
	</B></I></SPAN><SPAN LANG="en-GB">option to the </SPAN><SPAN LANG="en-GB"><I><B>ptnt
	</B></I></SPAN><SPAN LANG="en-GB">command (see online help). [Diego
	Pol] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: added macro expression
	</SPAN><SPAN LANG="en-GB"><I><B>numerrors </B></I></SPAN><SPAN LANG="en-GB">(number
	of tasks in a job that have errors or are dead). </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only: improved way in which interruptions are
	handled by slaves when values/variables from secondary slaves are
	being read. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug introduced in the september, 2004 version: increasing max.
	trees, when character names had been defined (and, possibly,
	constraints had been defined) and the maximum number of tree groups
	was more than 32, caused memory error messages (there were no
	problems if the maximum number of tree groups was set to 32 or
	less).  This is fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Using the macro expressions </SPAN><SPAN LANG="en-GB"><I><B>distnode</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>ismono</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>comnod</B></I></SPAN><SPAN LANG="en-GB">,
	altered memory so that most tree tree-search commands caused an
	error message. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	There were problems with files in DNA or protein formats, either
	when the state for the first taxon in a given character was a gap
	(-), or when all taxa had a gap for the character.  Saving the data
	(and possibly mapping the characters onto trees as well) caused the
	program to crash. [Diego Pol] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added a new search routine, piñon fijo.  This is
	not yet included in the menus; the command to invoke the piñon fijo
	is </SPAN><SPAN LANG="en-GB"><I><B>pfijo</B></I></SPAN><SPAN LANG="en-GB">.
	 It is a sort of ratchet, where the perturbation is not given by
	reweighting characters, but given by creating reduced data sets from
	sectors of the tree.  Instead of replacing the HTU's by their own
	down-pass states (as in sectsch, which produces exact score
	evaluations), this may use in some cases (randomly determined, with
	a probability constant) the states of one of the descendants
	(terminal or not) of the HTU.  After searching for the &quot;perturbated&quot;
	reduced data set, then full TBR and tree-drifting is performed.  The
	process is repeated a certain number of times (optionally, the
	resulting trees can be fused every certain numbers of cycles).  This
	is inspired in Usman Roshan's REC-I-DCM3 algorithm (with the
	difference that he used only terminals, not HTU's, and that he
	conceived the search for the reduced data sets as a &quot;search&quot;
	phase, not a a &quot;perturbation&quot; phase, which led to
	unnecessary effort in the reduced data sets –trees shorter for the
	reduced data sets were usually not shorter for the entire data set).
	 The advantage over other search algorithms seems to be that it can
	move to trees which are rather different from the starting one, yet
	quasi-optimal, in relatively little time (although this does not
	easily find minimum scores by itself, it is helpful in combination
	with other search routines). </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of March, 2005 (May 2005): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When defining groups of trees (or taxa, or characters, or hosts, in
	the case of parallel versions), references to existing groups were
	done only within square brackets, so that [ one two three ] added
	(or removed) to the group all the trees that were within groups one
	AND two AND three.  Since in some cases it may be desirable to be
	able to add the trees that are in groups one OR two OR three, the
	option to refer to groups using braces ({ and }) was added.  Thus, 
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-left: 1.97in; margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="en-GB">tgroup</SPAN>  <SPAN LANG="en-GB">=0 (groupname) 
{ group_one group_two group_three } ; </SPAN>
</P>
<P LANG="en-GB" STYLE="margin-left: 0.25in; text-indent: 0.24in; margin-top: 0.07in; margin-bottom: 0.07in">
or, if groups one, two and three are the only ones which starts with
&quot;group_&quot;: 
</P>
<P LANG="en-GB" STYLE="margin-left: 1.97in; margin-top: 0.07in; margin-bottom: 0.07in">
tgroup =0 (groupname)  { group_ } ; 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only: for large data sets, if a slave did not
	receive data and settings from parent within one minute, the slave
	exitted.  It was intended to simply check whether parent was alive,
	but a bug made it exit.  Now, slaves only exit if parent process is
	dead. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only:  added the <I><B>tasktoh </B></I>macro
	expression (returns number of host in which a task is running),
	added the possibility to pause/resume only some tasks of a job (the
	'=' option of <I><B>ptnt pause </B></I>and <I><B>ptnt resume</B></I>),
	and added the possibility to pause/resume all the tasks in a given
	host (<I><B>ptnt hpause </B></I>and <I><B>ptnt hresume</B></I>). 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only:  there were problems when a slave task tried
	to spawn other slave tasks repeating its instructions (i.e. using
	&quot;...&quot; as instructions).  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When reading compact tree files which contained more trees than
	could be fit into memory (so that tree-buffer size had to be
	increased while reading the file), some of the trees read were read
	improperly.  This could cause subsequent crashes or freezes, when
	attempting to operate on the trees read.  This was not a problem if
	the trees were being read in parenthetical notation; only compact
	notation caused a problem.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Attempting to save the data, if some character(s) had been renamed
	and multiple data blocks had also been named caused the program to
	crash.  Fixed now.  [Camilo Mattoni] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	For data sets with more than 8,000 taxa, saving the trees in compact
	notation produced the wrong output, so that saved trees were read
	back into the program as different from the saved trees.  This did
	not affect any data set with 8,000 or less taxa. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The <I><B>pfijo </B></I>command crashed on data sets with more than
	8,000 taxa (for reasons entirely different from the previous one;
	that both caused problems beyond 8,000 is just coincidence!).  This
	was because <I><B>pfijo </B></I>attempted to divide the tree in more
	chunks than expected.  It could also crash (if more rarely) on small
	data sets, because it sometimes attempted to create uninformative
	reduced data sets.  These two bugs are fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The <I><B>chunksize </B></I>option was added to the <I><B>pfijo
	</B></I>command.  The tree can be divided in up to 32 chunks; if the
	size given leads to dividing the tree in more than 32 chunks (or
	less than 2), the sizes corresponding to 32 chunks (or 2) are used. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The <I><B>sector </B></I>option of the <I><B>ptnt begin</B></I>
	command formerly allowed division of the tree in up to 16 chunks;
	the limit is now raised to 32. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Running the <I><B>xmult </B></I>command (or <U>Analyze/NewTechSearch</U>),
	with autoconstraints turned on for <I><B>xmult </B></I>and turned on
	for drifting, caused crashes or freezes.  Note the autoconstraints
	for drift have no effect on the drift analysis of tree-sectors. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Saving data (Data/SaveData) with some taxa/characters deactivated
	and some taxon/character groups defined created problems (the
	inactive taxa/characters were saved in the group definitions, but
	the taxa/characters were not actually present in the saved matrix). 
	Fixed now. [Martín Ramírez] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	For very large data sets, some randomizations took too long (for
	example, <I><B>xperm</B></I>, a command that should take a very
	short time).  This was because the randomizations were done very
	carefully, to insure random sequences.  If the careful process takes
	too long, now it is possible to use approximmate  randomizations,
	which should be reasonably random for most purposes.  This is turned
	on with <I><B>rseed !; </B></I>(the default, careful and slower
	randomizations, is set with <I><B>rseed-;</B></I>).  This only
	affects data sets with over 2,000 taxa. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	For very large numbers of taxa (above 5,000), the program could
	easily run out of memory during searches which involved strict
	consensus calculation at some point (autoconstrained drifting or
	ratcheting, tree-fusing). This was because consensus calculation was
	made with routines that use large amounts of memory for large
	numbers of taxa.  Now, if necessary, the program uses an alternative
	(less memory-consuming) routine. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When doing resampling, the cutoff value for GC summarizing of
	results (<I><B>cut </B></I>option) was properly set only if the
	resampling method was set to symmetrical (<I><B>sym</B></I>), not if
	resampling was set to jacknifing (<I><B>jak</B></I>) or
	bootstrapping (<I><B>boot</B></I>, <I><B>poisson</B></I>).  Now, the
	cut is read as cutoff for GC whenever summarizing is set to GC,
	regardless of resampling type.  [Andreas Wahlberg] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	There were problems when several character (or host, in parallel
	versions) groups were created using a single <I><B>xgroup </B></I>(or
	<I><B>ptnt hgroup</B></I>) command, AND some group which was not the
	last one was defined using the &quot;=&quot; option (instead of &quot;&gt;&quot;
	or &quot;&lt;&quot;), AND the number of characters was less than the
	number of taxa.  This could cause crashes (immediate or not), or
	unexpected behaviour. This is fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only:  there were problems propagating host group
	definitions to slaves.  Host group propagation is now correct. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only:  added the possibility to specify a list of
	tasks, for the <I><B>ptnt spy </B></I>command. When a single job is
	to be spied, a list of the tasks to spy can be given after the job
	name/number, separated by a slash (/). 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only:  if a slave had launched other slaves, using
	only some sectors of a tree (i.e. with the <I><B>sector </B></I>option),
	no in-situ search had been made after launching those slaves, and
	the master attempted to spy the trees in the slave, errors occurred
	(freezes, deadlocks, crashed).  Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only: added the option to spawn only some sectors,
	when using the <I><B>sector* </B></I>option of the <I><B>ptnt begin</B></I>
	command. This can be used to sequentially resolve different sections
	of a tree, in single machines (where simultaneously spawning all
	sectors, for large data sets, required very large amounts of
	memory).  The syntax of the sector* option remains the same, except
	that if a list of sectors (within square brackets) follows the
	number of sectors in which tree is to be partitiones, then only the
	sectors specified are launched.  When a slave task returns trees
	(with <I><B>ptnt get </B></I>or <I><B>ptnt spy</B></I>), one of the
	best trees in the slave task is returned with the rest of the
	sectors polytomized (two copies, placed in a group called
	TreeSector_i_jobname, where I is the task number, and jobname is the
	name of the job).  With this, it is easy to combine the sector with
	the rest of the trees, or with the other sectors. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added the possibility to estimate the number of SPR moves between
	two trees (<I><B>sprdiff </B></I>command).  Added macro expressions
	to access these values (<I><B>sprdiff </B></I>and <I><B>sprsim</B></I>).
	The method used will be published soon; it is a heuristic, and it
	depends on the current random seed (<I><B>rseed </B></I>command), so
	that repeating several estimations gives an idea of the error in the
	estimation. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	It was possible for the SPR and TBR swappers to miss some moves when
	doing searches under tree-constraints (i.e. depending on tree
	topologies, some moves that should have been accepted were sometimes
	rejected). This was most likely unnoticed by the user (it was
	discovered when testing the <I><B>sprdiff </B></I>command), and very
	unlikely to cause any harm.  Anyway, it doesn't happen anymore. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Attempting to prune (with the <I><B>pruntax </B></I>command) some
	taxa that were already absent from a tree caused the tree to be
	polytomized, instead of pruned. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB"><U>An important change</U></SPAN><SPAN LANG="en-GB">:
	the TBR algorithms used to be slowed down a lot when a better tree
	was found (lots of buffers had to be re-calculated).  I had been
	thinking about this for a while, and finally decided to seat down
	and improve it.  The transition from one tree to the next tree is
	now much faster, and buffers are modified based on the changes done
	to the tree; since this is not well tested yet, it might conceivably
	have some errors and then it is set as optional.  The new way of
	switching between trees is deactivated, with </SPAN><SPAN LANG="en-GB"><I><B>bbreak:safe</B></I></SPAN>
	<SPAN LANG="en-GB">(the setting subsequently applies to all
	instances of TBR; if you have asymmetric sankoff characters, the
	</SPAN><SPAN LANG="en-GB"><I><B>safe </B></I></SPAN><SPAN LANG="en-GB">applies
	always).  For large data sets (500 taxa or more), this makes a
	significant difference in the time needed to complete a random
	addition sequence, and it allows to do much faster drifting or
	ratcheting (specially with high numbers of replacements in the
	perturbation phase, which used to consume a lot of the search time).
	 Note that with the former method, each replication of </SPAN><SPAN LANG="en-GB"><I><B>mult
	</B></I></SPAN><SPAN LANG="en-GB">or </SPAN><SPAN LANG="en-GB"><I><B>xmult
	</B></I></SPAN><SPAN LANG="en-GB">started with a round of SPR before
	switching to TBR.  Since with </SPAN><SPAN LANG="en-GB"><I><B>bb:
	nosafe </B></I></SPAN><SPAN LANG="en-GB">TBR is now much faster in
	the initial stages of swapping, then doing Wagner+TBR now takes
	considerably shorter than Wagner+SPR+TBR (as long as you're not
	saving multiple trees, in which case starting with SPR under
	nomulpars still makes sense).  If you want the SPR phase to not be
	skipped from </SPAN><SPAN LANG="en-GB"><I><B>mult </B></I></SPAN><SPAN LANG="en-GB">(when
	a single tree per replication is being saved) and from </SPAN><SPAN LANG="en-GB"><I><B>xmult</B></I></SPAN><SPAN LANG="en-GB">,
	then use </SPAN><SPAN LANG="en-GB"><I><B>bb: noskipspr</B></I></SPAN><SPAN LANG="en-GB">.
	</SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of May, 2005 (July 2005): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The <I><B>goto-</B></I> option (i.e. to undefine a target file for
	<I><B>goto</B></I>) caused an error. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added the possibility to insert contents from files (file contents
	are copied, not interpreted).  The syntax is similar to that for
	goto, except that literal replacement is indicated with a double @
	(not used for anything else in TNT syntax).  This is useful
	specially to send instructions to slave tasks, without having to
	copy the file with instructions to all the slave machines: 
	</P>
</UL>
<P STYLE="margin-left: 2.25in; margin-top: 0.07in; margin-bottom: 0.07in">
 
</P>
<P LANG="es-ES" STYLE="margin-left: 2.25in; margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="en-GB">ptnt</SPAN>  <SPAN LANG="en-GB">begin jobname = 
@@filename labelname ; return ; </SPAN>
</P>
<P STYLE="margin-left: 2.25in; margin-top: 0.07in; margin-bottom: 0.07in">
 
</P>
<P STYLE="margin-left: 0.54in; text-indent: -0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
            <SPAN LANG="en-GB">if a &quot;target&quot; file had been
defined (with goto=), then the filename can be skipped: </SPAN>
</P>
<P STYLE="margin-left: 2.25in; margin-top: 0.07in; margin-bottom: 0.07in">
 
</P>
<P LANG="en-GB" STYLE="margin-left: 2.25in; margin-top: 0.07in; margin-bottom: 0.07in">
goto= filename; ptnt begin jobname =  @@ labelname ; return ; 
</P>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">            
</P>
<P STYLE="margin-left: 0.54in; text-indent: -0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
            <FONT COLOR="#000000"><SPAN LANG="en-GB">The end of the
text to copy must be indicated with a double @.  Aside for
instructions to </SPAN></FONT><SPAN LANG="en-GB">slave</SPAN><SPAN LANG="es-ES">
 </SPAN><SPAN LANG="en-GB">task(s), this can simplify the syntax for
loops, etc. </SPAN>
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Made it possible for sectorial searches to use a
	separate matrix-buffer (</SPAN><SPAN LANG="en-GB"><I><B>xbuf </B></I></SPAN><SPAN LANG="en-GB">option
	of the </SPAN><SPAN LANG="en-GB"><I><B>sectsch </B></I></SPAN><SPAN LANG="en-GB">command).
	 In the case of very large data sets (i.e. 2000 or more taxa) and
	relatively small sectors (i.e. below 300), the conversion to reduced
	data sets is significantly faster.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Made it possible for sectorial searches to fuse
	the results of multiple starting points for &quot;small&quot;
	sectors (i.e. sectors below drifting size).  This is the </SPAN><SPAN LANG="en-GB"><I><B>fuse
	</B></I></SPAN><SPAN LANG="en-GB">option of the </SPAN><SPAN LANG="en-GB"><I><B>sectsch
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added a new type of sectorial search, the
	&quot;exclusive sectorial search,&quot; as an option to the </SPAN><SPAN LANG="en-GB"><I><B>sectsch
	</B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>xmult
	</B></I></SPAN><SPAN LANG="en-GB">commands   This had been
	implemented before, in the parallel versions (Linux/Mac OS X), but
	it has now been added as a serial command.  Using </SPAN><SPAN LANG="en-GB"><I><B>xss
	N-M+R-S</B></I></SPAN> <SPAN LANG="en-GB">divides tree with T taxa,
	starting with sectors of size approximmately T/N and ending in size
	T/M, analyzing each, and repeats the selections R times, and doing a
	round of global TBR every S rounds; the sectors are not exactly
	even, admitting small differences, determined with the random seed
	(with the </SPAN><SPAN LANG="en-GB"><I><B>xeven </B></I></SPAN><SPAN LANG="en-GB">option,
	the size can be made as even as possible; default is </SPAN><SPAN LANG="en-GB"><I><B>noxeven</B></I></SPAN><SPAN LANG="en-GB">).
	In the case of the </SPAN><SPAN LANG="en-GB"><I><B>xmult </B></I></SPAN><SPAN LANG="en-GB">command,
	specifying </SPAN><SPAN LANG="en-GB"><I><B>xss </B></I></SPAN><SPAN LANG="en-GB">does
	first css (if specified), then rss (if specified), and then xss. 
	The parameters for xss under </SPAN><SPAN LANG="en-GB"><I><B>xmult
	</B></I></SPAN><SPAN LANG="en-GB">(chunks, cycles, even sizes) are
	set with the </SPAN><SPAN LANG="en-GB"><I><B>sectsch </B></I></SPAN><SPAN LANG="en-GB">command.</SPAN>
		</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Calculating relative bremer supports, considering only trees within
	absolute supports, produced serious overestimations of the actual
	supports.  This is fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Interrupting the </SPAN><SPAN LANG="en-GB"><I><B>pfijo
	</B></I></SPAN><SPAN LANG="en-GB">command caused subsequent crashes.
	 Fixed. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Defining a value of suboptimal/relative suboptimal, when the trees
	were being collapsed with SPR or TBR, was intended to influence tree
	collapsing when doing resampling, but it didn't.  Now it does: the
	trees are further collapsed. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: an important addition: it
	is now possible to swap (using TBR) on a tree in parallel.  This is
	the </SPAN><SPAN LANG="en-GB"><I><B>swap </B></I></SPAN><SPAN LANG="en-GB">option
	of the </SPAN><SPAN LANG="en-GB"><I><B>ptnt begin </B></I></SPAN><SPAN LANG="en-GB">or
	</SPAN><SPAN LANG="en-GB"><I><B>ptnt again </B></I></SPAN><SPAN LANG="en-GB">commands.
	 Swapping in parallel only saves time for very large data sets
	(otherwise, swapping on a tree takes so short that the communication
	time takes longer than the swapping itself).  When several trees are
	to be swapped in parallel (and given that transferring data to a job
	that has been initiated takes a significant amount of time), it is
	best to have some jobs (inactive) ready for swapping, and re-start
	them with </SPAN><SPAN LANG="en-GB"><I><B>again</B></I></SPAN><SPAN LANG="en-GB">.
	</SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: for very large data sets,
	considerable time is spent (when initiating jobs with begin) in
	transferring the data to all the slaves.  It is now possible to
	create a copy of the data (in binary format) in the disk in each
	slave (with </SPAN><SPAN LANG="en-GB"><I><B>ptnt setdata</B></I></SPAN><SPAN LANG="en-GB">),
	and then have the slaves read the data from disk instead of getting
	it through PVM (with the </SPAN><SPAN LANG="en-GB"><B>/</B></SPAN><SPAN LANG="en-GB"><I><B>dskdata
	</B></I></SPAN><SPAN LANG="en-GB">option of </SPAN><SPAN LANG="en-GB"><I><B>ptnt
	begin</B></I></SPAN><SPAN LANG="en-GB">). See online help of the
	</SPAN><SPAN LANG="en-GB"><I><B>ptnt </B></I></SPAN><SPAN LANG="en-GB">command
	for details. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only: in very large data sets, initiating jobs
	sometimes crashed the slaves. This was because of a
	misscommunication problem with the master, at the time when the
	slave was checking min-max steps for the data received (since the
	time to check min-max steps for smaller data sets is
	non-significant, then it was very unlikely that the problem arose in
	smaller data sets).  This is fixed now, and jobs for large data sets
	can be initiated more reliably now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In very big data sets, the time used to set up
	the tree-constraints, in constrained searches, was too much.  Since
	this is, in principle, not a very costly job, I had used a lousy
	algorithm to do it.  However, on very large data sets, when better
	trees were being found frequently, the tree-constraints made the
	search slower, instead of faster.  This is fixed now, and a much
	faster algorithm is used to set up the constraints.  Since the
	default for xmult is using autoconstrained searches (level 1:
	consensus of previous and wagner), this will make </SPAN><SPAN LANG="en-GB"><I><B>xmult
	</B></I></SPAN><SPAN LANG="en-GB">searches significantly faster, for
	data sets above 2500 taxa or so. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Again, in very big (and messy) data sets (2500
	taxa or more), it is now possible to try to select the most
	promising rearrangements when doing TBR on strongly suboptimal
	trees.  This makes the initial stages of the swapping to lower the
	score a little more rapidly (subsequent stages of the search catch
	up, or almost, so that the net gain is only a little).  This is set
	with the </SPAN><SPAN LANG="en-GB"><I><B>preproc </B></I></SPAN><SPAN LANG="en-GB">option
	of the </SPAN><SPAN LANG="en-GB"><I><B>bbreak </B></I></SPAN><SPAN LANG="en-GB">command
	(and it applies only to </SPAN><SPAN LANG="en-GB"><I><B>mult </B></I></SPAN><SPAN LANG="en-GB">saving
	a single tree per replication and </SPAN><SPAN LANG="en-GB"><I><B>skipspr</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>bbreak </B></I></SPAN><SPAN LANG="en-GB">with
	</SPAN><SPAN LANG="en-GB"><I><B>nomulpars</B></I></SPAN><SPAN LANG="en-GB">).
	</SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The expressions </SPAN><SPAN LANG="en-GB"><I><B>$taxon
	N</B></I></SPAN><SPAN LANG="en-GB">, </SPAN><SPAN LANG="en-GB"><I><B>$character
	N</B></I></SPAN><SPAN LANG="en-GB">, or </SPAN><SPAN LANG="en-GB"><I><B>$state
	N S</B></I></SPAN><SPAN LANG="en-GB">, are now read as the name of
	taxon N, character N, or state S of character N.  Note that this
	works only if the macros are on and no user variable has been named
	&quot;taxon&quot;, &quot;character&quot;, or &quot;state.&quot;  The
	name of the file with the data set, is referred to as $datafile.  In
	parallel versions, $host N is read as the name of host N.  This can
	be used to produce more verbose reports in scripts. </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of July, 2005 (September 2005): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>prunnelsen!</B></I></SPAN><SPAN LANG="en-GB">
	option sometimes caused crashes or freezes; fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The macro expressions </SPAN><SPAN LANG="en-GB"><I><B>states</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>contmins</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>contmaxs</B></I></SPAN><SPAN LANG="en-GB">,
	caused all other characters to be deactivated.  Fixed. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">If tree-tags have been written, then the
	expression </SPAN><SPAN LANG="en-GB"><I><B>$ttag N </B></I></SPAN><SPAN LANG="en-GB">is
	equivalent to typing the label for node N of tag-tree.</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	To prevent problems in the macro language, now it is not possible to
	name a user-variable as one of the built-in expressions [Andrés
	Varón] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: when executing TBR in
	parallel (the </SPAN><SPAN LANG="en-GB"><I><B>swap </B></I></SPAN><SPAN LANG="en-GB">option
	of the </SPAN><SPAN LANG="en-GB"><I><B>ptnt begin</B></I></SPAN><SPAN LANG="en-GB">
	or </SPAN><SPAN LANG="en-GB"><I><B>ptnt again </B></I></SPAN><SPAN LANG="en-GB">commands)
	it is now possible to have one of the slaves work exclusively
	controlling the others.  In some cases (i.e. data sets where
	swapping proceeds slowly because of many characters or slow
	optimizations, numerous slave jobs) this works somewhat faster than
	the earlier implementation (in which one of the slaves was a
	controller and it also did swapings itself; often, the other slaves
	had to wait for the controller to finish its own swappings before
	proceeding with further swappings).  The option to have one slave
	acting exclusively as controller is set with </SPAN><SPAN LANG="en-GB"><I><B>swap+N
	</B></I></SPAN><SPAN LANG="en-GB">(where N is the tree to swap); the
	default (controller also does some swapping of its own) is </SPAN><SPAN LANG="en-GB"><I><B>swap
	N</B></I></SPAN><SPAN LANG="en-GB">. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only:  spying onto a job where
	the </SPAN><SPAN LANG="en-GB"><I><B>resampling </B></I></SPAN><SPAN LANG="en-GB">command
	was being executed caused errors (returning no trees at all, or
	crashing the slaves).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: the behavior of </SPAN><SPAN LANG="en-GB"><I><B>slaveget</B></I></SPAN><SPAN LANG="en-GB">,
	when values from some slaves could not be retrieved, was somewhat
	erratic (including –1 values written onto the wrong cells, and
	some non-retrieved cells written as 0 instead of –1).  Fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>xss </B></I></SPAN><SPAN LANG="en-GB">option
	of sectorial searches had problems under implied weights. Fixed now.
	</SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Saving step-matrices (defined with smatrix) produced output that was
	not readable by TNT, as well as saving character costs in Nexus file
	when the data were of type DNA.  Fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Calculation of minimum possible branch lengths
	(</SPAN><SPAN LANG="en-GB"><I><B>blength </B></I></SPAN><SPAN LANG="en-GB">command)
	under sankoff characters was wrong (with larger errors in the more
	basal nodes of trees).  This is fixed now.  Note however that the
	calculation of branch lengths in the case of sankoff characters is
	based on final costs, not on reconstructions; for each character,
	all combinations of states x in ancestor and y in descendant are
	tried, and the minimum of
	cost[x][n]+cost[y][ancestor[n]]+trans[y][x] (where </SPAN><SPAN LANG="en-GB"><I><B>cost[x][n]
	</B></I></SPAN><SPAN LANG="en-GB">is the cost beyond the minimum
	possible of assigning state </SPAN><SPAN LANG="en-GB"><I><B>x </B></I></SPAN><SPAN LANG="en-GB">to
	node </SPAN><SPAN LANG="en-GB"><I><B>n</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>trans[y][x] </B></I></SPAN><SPAN LANG="en-GB">is
	the cost of transforming from state </SPAN><SPAN LANG="en-GB"><I><B>y
	</B></I></SPAN><SPAN LANG="en-GB">to state </SPAN><SPAN LANG="en-GB"><I><B>x</B></I></SPAN><SPAN LANG="en-GB">).
	This can overestimate the length of a branch, and possibly
	underestimate it as well (see Goloboff, 1997, for discussion of a
	similar problem in a different –but related- situation).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Windows versions only: defining constraints (with
	</SPAN><SPAN LANG="en-GB"><U>Data/DefineConstraints</U></SPAN><SPAN LANG="en-GB">)
	could cause problems.  If you attempted to define negative
	constraints, then switched negative constraints off, then tried to
	define them again (without leaving the constraint dialog), the field
	for the tree number (that is, the reference number for the negative
	constraints) was not reactivated. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">When the transformation costs for a sankoff
	character are equivalent to those of a Fitch character, then the
	character is optimized (during searches) using Fitch's algorithms
	(which is much faster).  The rule used is as follows: when the cost
	of transformation between states present is all the same (P), and
	the cost to/from any absent state from/to any present state (A)
	multiplied by the number of states present (N) is less than or equal
	the cost of transformation between states present (P) multiplied by
	the number of states present minus one (that is, when Px(N-1) ≤
	AxN), then consider the sankoff character as a Fitch equivalent.</SPAN>
	 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Mac versions only: storing a string in a user variable produced a
	reversed string (because of the big/little endian difference).  This
	is fixed now. [Diego Pol] 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of September 2005 (November 2005): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Resetting the RAM for macros in Linux/Mac OSX versions, after having
	turned macros on and then off, caused crashes. [Andrés Varón] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Sectorial searches under </SPAN><SPAN LANG="en-GB"><I><B>xbuf
	</B></I></SPAN><SPAN LANG="en-GB">(=default) when there were
	nonadditive characters with 2-8 states AND nonadditive characters
	with 16-32 AND continuous characters caused miscalculations.  Fixed
	now. [Hiri Julcr] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There is now an alternative (easier) form of
	declaration of variables.  Using the &quot;:&quot; option, it is now
	possible to simply declare the names of the variables (and their
	dimensions), omitting the number of variable to which the name is to
	be assigned, or the plus (+) symbol.  This works as if the
	declarations always used the plus; note that naming starts </SPAN><SPAN LANG="en-GB"><I>always
	</I></SPAN><SPAN LANG="en-GB">from the lowest available variable.</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>set </B></I></SPAN><SPAN LANG="en-GB">command
	could set one-dimensional arrays (for example, with the </SPAN><SPAN LANG="en-GB"><I><B>downlist
	</B></I></SPAN><SPAN LANG="en-GB">or </SPAN><SPAN LANG="en-GB"><I><B>deslist
	</B></I></SPAN><SPAN LANG="en-GB">expressions) only if they had been
	defined as such; it is now possible to use any valid array (for
	example, matrix[2] is now valid as a one-dimensional array with 10
	cells, if </SPAN><SPAN LANG="en-GB"><I>matrix </I></SPAN><SPAN LANG="en-GB">had
	been defined as </SPAN><SPAN LANG="en-GB"><I>matrix[3 10]</I></SPAN><SPAN LANG="en-GB">).
	 </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">It is now possible to assign state sets (with the
	macro expression </SPAN><SPAN LANG="en-GB"><I><B>states</B></I></SPAN><SPAN LANG="en-GB">)
	corresponding to all characters, all taxa, or both, to
	one-dimensional or two-dimensional arrays. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added expression </SPAN><SPAN LANG="en-GB"><I><B>statediff
	</B></I></SPAN><SPAN LANG="en-GB">to the macro language (see
	command-line help for syntax).</SPAN> 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes
changes to the version of November 2005 (December 2005): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>contmins </B></I></SPAN><SPAN LANG="en-GB">and
	</SPAN><SPAN LANG="en-GB"><I><B>contmaxs </B></I></SPAN><SPAN LANG="en-GB">expressions
	produced an error message if a tree-number (which is unneeded, but
	optional) was specified [Farhat Habib] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">For sectorial searches, it is now possible to
	specify exactly the number of selections for each size, using the
	&quot;</SPAN><SPAN LANG="en-GB"><I><B>selfactor = N1 N2 N3</B></I></SPAN><SPAN LANG="en-GB">&quot;
	option.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: If a job was reset with
	</SPAN><SPAN LANG="en-GB"><I><B>ptnt again</B></I></SPAN><SPAN LANG="en-GB">,
	and the slaves had been used before to swap a tree in parallel, then
	the job was not reset (receiving the new set of instructions), but
	instead swapped again on the tree received (as if it had been asked
	to swap in parallel).  This is fixed now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: when recovering results
	(with </SPAN><SPAN LANG="en-GB"><I><B>ptnt get</B></I></SPAN><SPAN LANG="en-GB">)
	from running exclusive sectors (</SPAN><SPAN LANG="en-GB"><I><B>/sector
	*N </B></I></SPAN><SPAN LANG="en-GB">or </SPAN><SPAN LANG="en-GB"><I><B>/sector-N
	</B></I></SPAN><SPAN LANG="en-GB">options) the polytomized tree was
	sent back only if the initial score had been bettered or matched,
	and the master had no control over this. When spying results (with
	</SPAN><SPAN LANG="en-GB"><I><B>ptnt spy</B></I></SPAN><SPAN LANG="en-GB">)
	the polytomized tree was sent always.  Now, with a special return
	command, it is possible to control whether </SPAN><SPAN LANG="en-GB"><I><B>ptnt
	get </B></I></SPAN><SPAN LANG="en-GB">returns a polytomized tree
	always (with </SPAN><SPAN LANG="en-GB"><I><B>return polytree</B></I></SPAN><SPAN LANG="en-GB">)
	or never (with </SPAN><SPAN LANG="en-GB"><I><B>return nopolytree</B></I></SPAN><SPAN LANG="en-GB">).</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>xmult </B></I></SPAN><SPAN LANG="en-GB">command
	(invoked by most of the </SPAN><SPAN LANG="en-GB"><U>New Tech Search</U></SPAN>
	<SPAN LANG="en-GB">options) had problems when doing autoconstrained
	searches under previously defined constraints.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added calculation of &quot;wrong groups&quot; and
	&quot;mist groups&quot; to the </SPAN><SPAN LANG="en-GB"><I><B>sibyl
	</B></I></SPAN><SPAN LANG="en-GB">option of the </SPAN><SPAN LANG="en-GB"><I><B>resample
	</B></I></SPAN><SPAN LANG="en-GB">command (optionally, with the
	</SPAN><SPAN LANG="en-GB"><I><B>errcount </B></I></SPAN><SPAN LANG="en-GB">option).
	 &quot;Error rates&quot; are the number of groups in the reduced
	data set that are not found in the complete data set, divided by the
	total number of groups supported by the reduced data set.  &quot;Mist
	groups&quot; are the number of groups in the complete data set that
	are not found in the reduced data set, divided by the total number
	of groups supported by the complete data set.  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Linux/Mac versions only: when program is running
	in the background, it is now possible to stop it by creating a file
	called </SPAN><SPAN LANG="en-GB"><I><B>stop_tnt_ID </B></I></SPAN><SPAN LANG="en-GB">(where
	ID is the process ID; TNT automatically deletes this file when
	exitting), and pause it by creating a file </SPAN><SPAN LANG="en-GB"><I><B>pause_tnt_ID</B></I></SPAN><SPAN LANG="en-GB">.
	 Before, TNT could be stopped (not paused), but without
	specification of a process ID (so that all TNT instances were
	stopped). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added a new (experimental) command, </SPAN><SPAN LANG="en-GB"><I><B>hybrid</B></I></SPAN><SPAN LANG="en-GB">.
	 This allows exchanging a group between two trees, even when the
	group does not have identical composition in both trees. The program
	makes an effort to identify the most evenly sized partition for
	which the group has the most similar composition.  The taxa present
	in group of donor tree but not present in the most similar group of
	the recipient tree are pruned off before moving group from donor to
	recipient (they are already placed somewhere else in the recipient
	tree); the taxa present in group of recipient tree but not in group
	of donor tree are pruned off, and then they are absent from the
	resulting tree.  The missing taxa (if any) are then sequentially
	added at the best available position (as in a wagner tree, only that
	the starting point is an almost complete tree), and then the entire
	tree is swapped.  Recipient and donor tree are exchanged, and
	process repeated.  This command can also be used to complete (as
	described) trees which are missing some taxa (see online-help for
	details).  It is intended for use (in scripts) in cases where
	tree-fusing fails to produce better trees by virtue of the source
	trees being too different (e.g. in the case of very poorly
	structured data sets) and there being no (or few) equivalent groups
	to exchange.  It may, on rare occassions, produce better results
	than the </SPAN><SPAN LANG="en-GB"><I><B>tfuse </B></I></SPAN><SPAN LANG="en-GB">command.</SPAN>
		</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/Changes
to the version of December 2005 (February 2006)</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">using</SPAN>  <SPAN LANG="en-GB">large numbers of
	initial replications for new tech searches often crashed the
	program.  Fixed now [Tobias Malm] </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	In exceptionaly rare cases (and only for data sets with 100 to 200
	taxa), the TBR swapper triggered an interal error message regarding
	clusters.  The TBR swapper now has a wider margin of tolerance, so
	that this error isn't triggered anymore. [Rafael Miranda] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">A small change that may make the life of some
	people easier: when doing random adition sequences plus TBR
	(</SPAN><SPAN LANG="en-GB"><U>Analyze/TraditionalSearch</U></SPAN><SPAN LANG="en-GB">,
	or </SPAN><SPAN LANG="en-GB"><I><B>mult </B></I></SPAN><SPAN LANG="en-GB">command)
	the program issues a warning (instead of an error message) if the
	number of replications times the number of trees to save per
	replication exceeds available treespace.  The search proceeds,
	stopping when (and if) the buffer is actually filled. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The macro expressions </SPAN><SPAN LANG="en-GB"><I><B>length
	</B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>fit
	</B></I></SPAN><SPAN LANG="en-GB">no longer re-pack data if this
	isn't needed: if the tree to optimize is binary and complete, and
	the data are already packed for searches, then the optimizer for
	searches is used now.  This may save a little time in some macro
	routines.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The lists of taxa included/excluded from trees
	(</SPAN><SPAN LANG="en-GB"><I><B>incltax</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><U>Trees/Describe</U></SPAN><SPAN LANG="en-GB">),
	in optional table formats, did not use taxon names even if requested
	to do so.  Now they do. </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/Changes
to the version of February 2006 (March 2006):</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">both</SPAN>  <SPAN LANG="en-GB">the SPR and the
	TBR swapper running under tree-constraints (i.e. constraints for
	monophyly) could (rarely, depending on the constraint topologies)
	miss some rearrangements.  This is fixed now.  </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	As a consequence of the previous bug, the calculation of
	SPR-distances between trees sometimes could report that the trees
	differed in fewer rearrangements than they actually did. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Setting gaps to be read as missing (</SPAN><SPAN LANG="en-GB"><I><B>nstates
	nogaps;</B></I></SPAN><SPAN LANG="en-GB">), although it produced the
	proper setting, produced an error message. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There was a bug in the analysis of sectorial
	searches with randomly chosen sectors and combined strategies
	(beyond the </SPAN><SPAN LANG="en-GB"><I><B>gocomb </B></I></SPAN><SPAN LANG="en-GB">value),
	that produced improper randomizations of the sectors to chose for
	analysis.  Therefore, the results of using combined strategies were
	sometimes very poor.  This is fixed now. </SPAN>
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="en-GB">Fixes/changes to the version of March, 2006 (April
2006): </SPAN>
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug introduced in the version of Sept. 2005, when adding the
	automatic treatment of Fitch-like Sankoff characters as additive
	during searches: a Sankoff character which was equivalent to a Fitch
	one, but had been set as additive, could cause crashes during
	packing of the data for searches (and perhaps incorrect
	calculations). 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Selecting only some trees for calculation of a supertree may have
	caused the wrong selection to be used, in the Linux or Mac versions.
	 This is fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	An addition useful for very big and difficult data sets, which
	required a good deal of programming, and I had been expecting to do
	it for a long time: recursive sectorial searches.  This lets you
	define any search routine you want for the analysis of sectors in a
	search with <I><B>sectsch</B></I>.  The search routine is specified
	within square brackets, as an option of <I><B>sectsch</B></I>.  The
	search routine may include macro instructions, and instructions to
	use <I><B>sectsch </B></I>(possibly also with user-specified
	routines; if you want these to be identical to the previous level of
	recursion, use &quot;…&quot; as instructions; this will obviously
	require some means for deciding when to stop recursing, such as the
	number of taxa for the current sector, or the desired maximum level
	of recursion).  Two macro expressions were added, for facilitating
	recursive sectorial searches: <I><B>seclevel </B></I>(the level of
	recursion of the current subproblem; 0 if called from outside
	<I><B>sectsch</B></I>) and <I><B>grandscore </B></I>(best score for
	complete tree, of the current execution).  This option may still be
	somewhat unstable or cause problems, because it is a complex option.
	 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of April, 2006 (May 2006): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the possibility to optimize polytomies as
	&quot;soft&quot; (Maddison, 1989).  This is the &quot;!&quot; option
	of commands </SPAN><SPAN LANG="en-GB"><I><B>length</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>fit</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>score</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>cscore</B></I></SPAN><SPAN LANG="en-GB">.
	 Sankoff characters cannot be optimized on soft polytomies.  It is
	possible to access character fits through macro expressions, simply
	adding the prefix &quot;</SPAN><SPAN LANG="en-GB"><I><B>soft</B></I></SPAN><SPAN LANG="en-GB">&quot;
	to the expressions </SPAN><SPAN LANG="en-GB"><I><B>score</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>homo</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>fit</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>length </B></I></SPAN><SPAN LANG="en-GB">(please
	spare me any jokes about the unfortunate combination of &quot;</SPAN><SPAN LANG="en-GB"><I><B>softhomo</B></I></SPAN><SPAN LANG="en-GB">&quot;).</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Previous update (March, 2006) had an addition not
	included in the present list, which contained a minor bug.  For
	continuous characters, it is now possible to plot on the tree
	branches the maximum increases and decreases among different
	possible reconstructions (when all reconstructions imply an increase
	along a branch, the &quot;maximum decrease&quot; is reported as the
	minimum increase –a positive number).  A bug caused some increases
	to be improperly calculated.  This is the &gt; and &lt; options of
	the </SPAN><SPAN LANG="en-GB"><I><B>blength </B></I></SPAN><SPAN LANG="en-GB">command.</SPAN>
		</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug fix not reported in earlier versions: matrices with continuous
	characters mixed with alpha-numeric caused the &quot;-&quot; symbol
	in the alphanumeric matrix to be read as a gap instead of a missing
	entry.  The &quot;-&quot; is now properly read as missing. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	RAS+TBR (nomulpars) for large matrices with 16-32 states is now much
	faster (10 to 1).  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Calculations of minimum steps for nonadditive
	characters faster for most data sets, and eliminates possible errors
	when there are many polymorphisms.  Added </SPAN><SPAN LANG="en-GB"><I><B>xmin</B></I></SPAN><SPAN LANG="en-GB">/</SPAN><SPAN LANG="en-GB"><I><B>noxmin
	</B></I></SPAN><SPAN LANG="en-GB">option to the </SPAN><SPAN LANG="en-GB"><I><B>nstates
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed some problems when mapping unnamed
	characters with characters names ON.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed some problems with randomizations using
	approximmate random sequences (</SPAN><SPAN LANG="en-GB"><I><B>rseed
	!</B></I></SPAN><SPAN LANG="en-GB">). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Changing the type of randomization (</SPAN><SPAN LANG="en-GB"><I><B>rseed
	!</B></I></SPAN> <SPAN LANG="en-GB">or - ) after permuting data, and
	before de-permuting, caused data to be wrongly  de-permuted.  Now,
	the data are automatically de-permuted if type of randomization
	changed.</SPAN> 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes
changes to the version of May, 2006 (June 2006): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The value of informativeness (</SPAN><SPAN LANG="en-GB"><I><B>isinfo
	</B></I></SPAN><SPAN LANG="en-GB">expression) returned to macros
	could be wrong.  This bug was introduced only in the last update,
	and it probably didn't affect things other than scripts making use
	of the </SPAN><SPAN LANG="en-GB"><I><B>isinfo </B></I></SPAN><SPAN LANG="en-GB">expression.</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Now it's possible to run (almost) all commands
	from within </SPAN><SPAN LANG="en-GB"><I><B>resample </B></I></SPAN><SPAN LANG="en-GB">or
	</SPAN><SPAN LANG="en-GB"><I><B>qnelsen</B></I></SPAN><SPAN LANG="en-GB">,
	with the </SPAN><SPAN LANG="en-GB"><I><B>allow </B></I></SPAN><SPAN LANG="en-GB">option.
	 For example, you can further modify the character weights set by
	</SPAN><SPAN LANG="en-GB"><I><B>resample </B></I></SPAN><SPAN LANG="en-GB">(keep
	in mind that </SPAN><SPAN LANG="en-GB"><I><B>resample</B></I></SPAN><SPAN LANG="en-GB">
	&quot;deactivates&quot; characters by giving them zero-weight, which
	users aren't allowed to).  Forbidden things continue being (1)
	resetting maxtrees (explicitly or implicitly, say, by reading tree
	files with many trees), and (2) turning macros on-off.  This is
	intended for use in very specific scripts. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Running CSS with user-defined search routines (added after March,
	2006) often caused freezes (or possibly crashes).  Hopefully fixed
	for good. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In parallel versions, taxon and character group
	definitions were not transferred to slave tasks (tree group
	definitions are not supossed to be transferred).</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added @T N and +T N to the </SPAN><SPAN LANG="en-GB"><I><B>tread
	</B></I></SPAN><SPAN LANG="en-GB">command (see </SPAN><SPAN LANG="en-GB"><I><B>help
	tread;</B></I></SPAN><SPAN LANG="en-GB">).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The – option of </SPAN><SPAN LANG="en-GB"><I><B>minmax
	</B></I></SPAN><SPAN LANG="en-GB">reported minima/maxima for all
	taxa, not just active ones. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added option to parse arguments as ('0') (where 0
	is a user variable).  This allows more flexibility in parsing
	arguments (an example is now included in file </SPAN><SPAN LANG="en-GB"><I><B>parsargs.run</B></I></SPAN><SPAN LANG="en-GB">,
	included with the example scripts).  In connection with this, it is
	now possible to pass up to 32 arguments when running a script (as
	opossed to the previous 10). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added </SPAN><SPAN LANG="en-GB"><I><B>iterrecs
	</B></I></SPAN><SPAN LANG="en-GB">command (and the </SPAN><SPAN LANG="en-GB"><I><B>recsteps
	</B></I></SPAN><SPAN LANG="en-GB">expression; see </SPAN><SPAN LANG="en-GB"><I><B>help
	iterrecs </B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>help+recsteps</B></I></SPAN><SPAN LANG="en-GB">).</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Three cosmetic changes: the </SPAN><SPAN LANG="en-GB"><I><B>blength
	</B></I></SPAN><SPAN LANG="en-GB">command now doesn't add a new line
	if the tree is not being drawn (because of multiple tags), the
	</SPAN><SPAN LANG="en-GB"><I><B>macfloat </B></I></SPAN><SPAN LANG="en-GB">command
	reports the number of digits only if report is on, and writing tags
	to a tree is reported only if report is on.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Loops can now be named, with </SPAN><SPAN LANG="en-GB"><I><B>loop
	= loopname </B></I></SPAN><SPAN LANG="en-GB">(see </SPAN><SPAN LANG="en-GB"><I><B>help
	loop </B></I></SPAN><SPAN LANG="en-GB">for details).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Undefining tree groups (with </SPAN><SPAN LANG="en-GB"><I><B>tgroup–</B></I></SPAN><SPAN LANG="en-GB">)
	eliminated the trees from the group, but retained the group name. 
	This is no longer so.  Also, it is now possible to use a scope to
	specify a range of groups (although not the complete specification
	with –  and +). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Undefining groups of taxa, characters, or hosts
	(with </SPAN><SPAN LANG="en-GB"><I><B>hgroup–</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>agroup–</B></I></SPAN><SPAN LANG="en-GB">,
	or </SPAN><SPAN LANG="en-GB"><I><B>chargroup–</B></I></SPAN><SPAN LANG="en-GB">)
	crashed the program.  This bug was introduced in november 2004 (when
	making it possible to have unlimited numbers of tree groups), but
	hadn't been noticed so far. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Reading a tree (in parenthetical notation) without title caused
	crashes when automatic placement in groups of trees read was set
	off.  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Interrupting quick-consensus estimations, or
	resampling (</SPAN><SPAN LANG="en-GB"><I><B>qnelsen</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>resample</B></I></SPAN><SPAN LANG="en-GB">)
	sometimes caused input to be improperly parsed when the commands to
	run had been read from a file (the input file continued being
	parsed, despite the interruption). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Sectorial searches under implied weights, with
	the (default) </SPAN><SPAN LANG="en-GB"><I><B>xbuf </B></I></SPAN><SPAN LANG="en-GB">option
	on, sometimes produced crashes or erroneous tree evaluations when
	the sector selected comprised only uninformative characters.  This
	bug had been introduced in may 2005, when introducing the </SPAN><SPAN LANG="en-GB"><I><B>xbuf
	</B></I></SPAN><SPAN LANG="en-GB">option to the </SPAN><SPAN LANG="en-GB"><I><B>sectsch
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added the option to locally format user-variables when outputting
	them.  This can be done only for named variables. Using '/' right
	after the opening single quotes, it is possible to specify format,
	as in the C function, printf:  + determines a signed output, a
	number determines field width (if negative, flush it left), and a
	dot (.) followed by a number is the number of significant digits. 
	If several specifiers are used at the same time, the first one must
	be the +, then the field width, then the number of significant
	digits. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Command-driven versions only: when literal quotes
	and ASCII character conversion are ON, ASCII 0 (i.e. &amp;0 within
	</SPAN><SPAN LANG="en-GB"><I><B>quote</B></I></SPAN><SPAN LANG="en-GB">)
	is now interpreted as &quot;erase and go to the beggning of the
	line&quot;, and ASCII 1 (i.e. &amp;1) is interpreted as &quot;backspace&quot;.
	 These work on stderr only. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>discoeff
	</B></I></SPAN><SPAN LANG="en-GB">expression, when comparing
	multiple trees, reported only comparisons between the first tree of
	the first set specified, and all the trees in the second set.  The
	trees other than the first one in the first set were never compared.
	 When comparisons were specified only between two trees, they were
	ok. </SPAN>
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of June, 2006 (August 2006): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Tree-tags were saved (with the <I><B>save *</B></I> option) only for
	internal nodes, and reading tree-tags in parenthetical notation was
	possible only for internal nodes.  Terminals now can be done, both
	in and out. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug introduced in the version of May, 2006: TBR swapping for data
	sets with continuous and sankoff characters stopped when there were
	still rearrangements that produced better trees.  That is,
	successively repeating swapping often produced better trees every
	time.  This did not occur under the <I><B>safe </B></I>option of
	<I><B>bbreak</B></I>, only under the (default) <I><B>nosafe</B></I>.
	This bug was NOT there in versions before May, 2006. Sorry 'bout
	that!!!  This is solved now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added a new command, <I><B>travtree</B></I>, useful for macros. 
	This command allows to traverse trees in specific ways.  See online
	help for details. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The silent mode for tree-editing (the <I><B>]</B></I> option of
	<I><B>edit</B></I>) often produced freezes or crashes, if the tree
	to be edited had not been just plotted. Fixed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	If the first argument to a macro command was a number given in the
	form <I><B>#loopname</B></I>, this was not recognized and caused an
	error message (the expression <I><B>#1 </B></I>was properly
	recognized; only loop names didn't work).  Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When sankoff characters had (due to internal recoding, because of
	equivalence with a Fitch character; added July 2005) differential
	weights, sectorial searches often produces length miscalculations. 
	It is conceivable that other cases of differential weights also
	produced errors.  This is fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The comparison of groups absent in one tree but present in another
	(tcomp command, or <U>Trees/Comparisons/CompareGroups</U>), under
	temporary collapsing, mistakenly reported as &quot;present in one
	but not the other&quot; those groups which were present and
	unsupported in both trees.  Fixed now. 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of July, 2006: 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Changing format of data to DNA while reading matrices caused
	problems with missing entries if the initial format had been defined
	as either 16 or 32 states. [Martín Ramírez] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">In Nexus format, the gap symbol was always read
	as a new state, even when </SPAN><SPAN LANG="en-GB"><I><B>nogaps</B></I></SPAN><SPAN LANG="en-GB">
	had been set. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>nogaps </B></I></SPAN><SPAN LANG="en-GB">option
	applied only to DNA data, not to proteins.  Now it applies to both.</SPAN>
		</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The way in which user variables (with quotes), references to loop
	values (with #), and arguments (with %), are parsed has been
	changed, leading to a cleaner interpretation.  For example, '0''1'
	did not concatenate the values for both variables 0 and 1, and #1%1
	did not concatenate the value of the loop with the first argument.
	Concatenation is now produced properly.  Note that this might
	conceivably produce problems in some scripts which worked ok for the
	old parsing style; I'd appreciate reports on errors produced by this
	change. [Martín Ramírez] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed some errors occuring when converting a
	tree-tag (with $ttag) for a node for which a tag had not been
	defined.</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added expression </SPAN><SPAN LANG="en-GB"><I><B>numbits
	</B></I></SPAN><SPAN LANG="en-GB">to the macros. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	When doing searches, the time used for packing data is now not
	counted (the times reported correspond to the actual search times,
	and do not vary depending on whether the data had been previously
	packed or not). 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of August, 2006 (October 2006; this is now version
1.1): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Not truly a bug, but perhaps unexpected: counting
	numbers of transformations between states (</SPAN><SPAN LANG="en-GB"><I><B>change</B></I></SPAN><SPAN LANG="en-GB">
	or </SPAN><SPAN LANG="en-GB"><U>Optimize/CountSpecificChanges</U></SPAN><SPAN LANG="en-GB">)
	included the steps in non-active characters.  The steps in
	non-active characters are now never counted. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the possibility to do the auto-weighted
	optimization method of Goloboff (1997. Cladistics </SPAN><FONT SIZE=2 STYLE="font-size: 11pt"><SPAN LANG="en-GB">13:225-245</SPAN></FONT><SPAN LANG="en-GB">),
	previously implemented only in the program SL. This weights
	character-state transformations according to their homoplasy on the
	trees; it is computationally very complex (between 10,000 and
	100,000 times slower than analyses of nonadditive characters under
	equal weights), and can be used only for relatively small data sets
	(i.e. no more than 100-150 taxa) and with not many states per
	character (i.e. characters with more than 4 or 5 states may be very
	time consuming). This is turned ON with </SPAN><SPAN LANG="en-GB"><I><B>piwe+</B></I></SPAN>
	<SPAN LANG="en-GB">(or from the menus).  The options are set with
	the (new) command </SPAN><SPAN LANG="en-GB"><I><B>slfwt </B></I></SPAN><SPAN LANG="en-GB">(or
	from menus). This required some months of programming, and is the
	reason for switching from version 1.0 to version 1.1.  Also added a
	new option to the </SPAN><SPAN LANG="en-GB"><I><B>ratchet</B></I></SPAN>
	<SPAN LANG="en-GB">command, the </SPAN><SPAN LANG="en-GB"><I><B>tradrat
	</B></I></SPAN><SPAN LANG="en-GB">option (the &quot;traditional
	ratchet&quot;, where the perturbation phase simply swaps to
	completion, not saving equally optimal trees; under auto-weighted
	optimization, which produces very few trees, the modified ratchet
	implemented so far in TNT seems to produce inferior results; to run
	the </SPAN><SPAN LANG="en-GB"><I><B>tradrat </B></I></SPAN><SPAN LANG="en-GB">option
	you should probably increase </SPAN><SPAN LANG="en-GB"><I><B>upfactor
	</B></I></SPAN><SPAN LANG="en-GB">and </SPAN><SPAN LANG="en-GB"><I><B>downfactor</B></I></SPAN><SPAN LANG="en-GB">).
	Given that this is so computationally demanding, it is possible to
	restrict the TBR rearrangements (with </SPAN><SPAN LANG="en-GB"><I><B>slfwt
	maxtbr</B></I></SPAN><SPAN LANG="en-GB">, which restricts the
	possible rerootings of the clipped clade); note that there is no
	point in restricting possible re-insertion points of the clipped
	clade, since this can be evaluated efficiently; the problem with
	rerooting is that (implied) asymmetries in transformation costs
	require that most characters be re-optimized every time the tree is
	rerooted (as noted in Goloboff, 1997).  Because of this, under
	auto-weighted optimization SPR is more efficient (i.e. it looks at
	more rearrangements per unit time) than TBR (therefore, turning off
	the </SPAN><SPAN LANG="en-GB"><I><B>skipspr </B></I></SPAN><SPAN LANG="en-GB">option
	of the </SPAN><SPAN LANG="en-GB"><I><B>bbreak </B></I></SPAN><SPAN LANG="en-GB">command
	--with </SPAN><SPAN LANG="en-GB"><I><B>bbreak :</B></I></SPAN>
	<SPAN LANG="en-GB"><I><B>noskipspr;</B></I></SPAN><SPAN LANG="en-GB">--
	 will usually produce better searches).  When using this option,
	keep in mind that, since this is a recent addition, it may still
	produce crashes or freezes; be cautious and save results frequently.
	 Note that even the optimization of a single tree can be costly, and
	it uses heuristic shortcuts; thus, the score reported after a search
	is completed may be slightly different from the score obtained by
	reoptimizing the trees found in a search, which doesn't indicate a
	bug but simply the heuristic nature of the optimization process (the
	likelihood of this actually happenning decreases when increasing
	</SPAN><SPAN LANG="en-GB"><I><B>exops</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>maxdist</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>setlim</B></I></SPAN> <SPAN LANG="en-GB">from
	the </SPAN><SPAN LANG="en-GB"><I><B>slfwt </B></I></SPAN><SPAN LANG="en-GB">command).
	</SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows only: when some tree-tags had been written to a target tree,
	and a tree-save file was open in compact mode (append or not), the
	program attempted to save the tree-tags to the compact tree-file
	(which is not a legal action).  Now, tree-tags are saved only if the
	tree-file is open in parenthetical mode. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Under the (default) </SPAN><SPAN LANG="en-GB"><I><B>skipspr
	</B></I></SPAN><SPAN LANG="en-GB">mode of swapping, when requesting
	mult replications under SPR holding a single tree per replication,
	no actual rearrangements were done (i.e. the SPR phase was skipped,
	and followed by nothing!).  This works as expected now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">performing</SPAN>  <SPAN LANG="en-GB">tree-fusing
	when more than 65535 trees were in memory crashed the program [
	Henrik Nilsson ].  While it is still not possible to run more than
	65535 trees, the program now issues an error message and continues
	execution.  The same is true for other randomizations involving more
	than 65535 things. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only: there were problems when transferring values
	of user variables from slaves, if either the source or destination
	variable was dimension-less (i.e. not an array). Arrays worked ok. 
	This is fixed now. 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of October, 2006 (December 2006): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	During searches under auto-weighted optimization tree-scores were
	occassionally grossly miscalculated, producing either that (a) some
	better trees were mist, or (b) many bad trees seemed to be within
	the error margin and then the score had to be checked exactly for
	too many trees (slowing down program).  [ Marcos Mirande ] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added an option for showing location of pruned
	taxa on reduced consensus (either from the consensus dialog, in 
	Windows version, or as an option of the </SPAN><SPAN LANG="en-GB"><I><B>nelsen
	</B></I></SPAN><SPAN LANG="en-GB">command).  This can be useful to
	summarize information for conflicting trees.  I should have thought
	of this before.  Sorry I didn't.  Now it's there.  As any new
	option, it may still have problems; double-check results and keep in
	mind it might freeze or crash the program.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Windows version only: added the possibility to
	turn pre-viewing of trees on and off with a command (</SPAN><SPAN LANG="en-GB"><I><B>tplot[</B></I></SPAN><SPAN LANG="en-GB">,
	and </SPAN><SPAN LANG="en-GB"><I><B>tplot]</B></I></SPAN><SPAN LANG="en-GB">,
	respectively).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Windows versions only: improved the way in which
	the </SPAN><SPAN LANG="en-GB"><I><B>opendlg</B></I></SPAN><SPAN LANG="en-GB">
	command defines subordination for controls. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added a new macro expression, </SPAN><SPAN LANG="en-GB"><I><B>numhits</B></I></SPAN><SPAN LANG="en-GB">,
	which returns the number of hits to the best score that were done in
	the last execution of a </SPAN><SPAN LANG="en-GB"><I><B>mult </B></I></SPAN><SPAN LANG="en-GB">or
	</SPAN><SPAN LANG="en-GB"><I><B>xmult </B></I></SPAN><SPAN LANG="en-GB">command.</SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed some potential problems with outgroup
	identification when deactivating some specific blocks (</SPAN><SPAN LANG="en-GB"><I><B>blocks
	</B></I></SPAN><SPAN LANG="en-GB">command).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>hybrid
	</B></I></SPAN><SPAN LANG="en-GB">command did not properly parse the
	'</SPAN><SPAN LANG="en-GB"><B>-</B></SPAN><SPAN LANG="en-GB">'
	option (to mix without completing and swapping).  Fixed now. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Reading large matrices in blocks of data could create problems for
	the reporting of progress.  Fixed now. 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of December, 2006 (January 2007): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Parallel versions only: the slaves could not run recursive sectorial
	searches (the maximum level of recursion was determined at startup
	as always 0). The maximum level of recursion on slaves is now set as
	identical to that of the master.  In addition, several potential
	problems with interrupting/spying recursive sectorial searches from
	slaves were fixed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added a new command, <I><B>chkmoves </B></I>(see online help).  This
	can be useful to quickly identify taxa that deresolve the strict
	consensus (or decrease group supports). 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Tree collapsing under either SPR or TBR, when using auto-weighted
	optiimization as optimality criterion, produced serious errors
	(either crashing or freezing program, or producing wrong
	collapsings).  Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The just added option to show location of pruned taxa on the
	consensus produced errors when the list of taxa to exclude used some
	taxon groups (possibly excluding many more taxa than it had been
	actually requested).  Fixed now. 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of January, 2007 (March 2007): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added a new command, <I><B>prunmajor</B></I>, which helps
	identifying taxa to prune to improve group frequencies (or frequency
	differences), used to calculate group supports.  This command is
	likely to change soon, with addition of more options. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug in the <I><B>sprdiff </B></I>command sometimes led to improper
	calculations when not using stratified calculations; this became
	obvious when displaying tree-diagrams of the moves, and the number
	of moves needed to resolve some node of the consensus was reported
	as a lower number than the actual number of individual moves
	reported.  Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added the '[' option to the <I><B>sprdiff </B></I>command. This
	tries to find the minimum SPR distance between two trees, but
	weighting moves.  Longer moves are more costly.  The weight of an
	individual move to N nodes away, is calculated as FxN/(N+K), where K
	is a constant of &quot;strength&quot; (as in implied weighting, with
	smaller values of K determining that all moves have a more similar
	cost, and K=0 that every move costs the same, regardless of
	distance), and F is a &quot;normalizing factor&quot;, so that the
	largest possible move (T-3, where T=taxa) costs 1 (i.e.,
	F=(T-3+K)/(T-3)).  The distance N is calculated as the degree of the
	polytomy created by consensing the trees before and after the move,
	minus 2.  The weighted SPR distance is probably a more accurate
	measure of tree similarity than the unweighted SPR distance. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added the &quot;<I><B>noviol</B></I>(ations)&quot; and &quot;<I><B>poly</B></I>&quot;
	options to the <I><B>sprdiff </B></I>command (see online help).  The
	first determines that (single) moves placing a node as sister to its
	ancestor are not accepted (although combinations of moves may still
	violate time constraints: moving first to the sister of the
	ancestor, and then to the ancestor istelf, is allowed).  The second
	counts the number of moves necessary to resolve/collapse when source
	and/or target trees have polytomies (with a heuristic which is
	dependent on the ordering of the trees; if using this option for
	trees <I><B>i</B></I>, <I><B>j</B></I>, it is advisable to calculate
	both <I><B>sprdiff i j </B></I>and <I><B>sprdiff j i</B></I>, and
	use the smallest value). 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Performing tree-searches after calculating SPR-distances led to
	crashes or error messages [Leandro Jones].  This is fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Linux/MacOSX versions only: it is now possible to record to file
	each of the commands given to the program, when inputting commands
	from the console.  For this, set echo to &quot;[&quot; (use &quot;]&quot;
	to turn it off).  Note that this doesn't echo commands from input
	files.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Calculating distortion coefficients when trees had different sets of
	taxa sometimes produced impossible values.  This is fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The program uses now a buffering system for output that causes long
	output to be written out much faster.  This was an issue only in the
	case of saving large data sets, or drawing tree-diagrams for very
	large trees. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Mac OS X versions only: the most recent versions had changed the way
	in which the backspace key behaves.  The behaviour of the backspace
	key is now, again, what Mac users expect of backspace keys. 
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of March, 2007 </SPAN> (April 2007)<SPAN LANG="en-GB">:
</SPAN>
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">there</SPAN>  <SPAN LANG="en-GB">were problems
	when applying the </SPAN><SPAN LANG="en-GB"><I><B>chkmoves </B></I></SPAN><SPAN LANG="en-GB">command
	with some taxa deactivated (either the node numbers were obviously
	screwed up, or –if creating taxon groups- there were freezes).  </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">There were problems merging data files (the
	</SPAN><SPAN LANG="en-GB"><I><B>dmerge </B></I></SPAN><SPAN LANG="en-GB">command
	got screwed up when adding the &quot;!&quot; option to the xread
	command, a few months ago).  Also, when some character contained
	only missing entries, there were problems saving the data (the
	all-missing character was placed at the beginning of a block, with
	unspecified format). [Kurt Pickett] </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Under auto-weighted optimization, polytomies cannot be optimized (as
	&quot;soft&quot; or otherwise), but the program calculated SOME
	value (I don't even know what it was).  Now, a check was added to
	make sure that if auto-weighted optimization is ON, the program
	refuses to soft-optimize polytomies.  Also, in the Windows version,
	the option to optimize as &quot;soft&quot; was removed from the
	corresponding dialog. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Windows versions only: there were problems with
	the behaviour of the dialog for weighting
	(</SPAN><SPAN LANG="en-GB"><U>Settings/ImpliedWeighting</U></SPAN><SPAN LANG="en-GB">).
	 It works ok now. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the &quot;</SPAN><SPAN LANG="en-GB"><I><B>noglobal</B></I></SPAN><SPAN LANG="en-GB">&quot;
	option to the </SPAN><SPAN LANG="en-GB"><I><B>sectsch </B></I></SPAN><SPAN LANG="en-GB">command.
	 With this, global TBR is never performed (not even at the end of
	the procedure).  Note that, under </SPAN><SPAN LANG="en-GB"><I><B>xss</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>global </B></I></SPAN><SPAN LANG="en-GB">must
	be set to 1 or more for the global TBR to take effect (after the
	specified number of cycles). </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows version only:  resampling and analyzing with New Tech (from
	the menus), produced problems (crashes, bogus error messages). This
	is fixed.  [Andres Parada] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>iterrecs
	</B></I></SPAN><SPAN LANG="en-GB">command sometimes had problems
	(e.g. crashes) when there were nested </SPAN><SPAN LANG="en-GB"><I><B>iterrecs
	</B></I></SPAN><SPAN LANG="en-GB">commands for non-continuous
	characters. Hopefully fixed. [Santiago Catalano] </SPAN>
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of April, 2007 </SPAN> (May 2007):</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Issuing a </SPAN><SPAN LANG="en-GB"><I><B>condense
	</B></I></SPAN><SPAN LANG="en-GB">command without having read data
	or trees crashed the program [Matt Yoder]</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>rfreqs
	</B></I></SPAN><SPAN LANG="en-GB">command (see </SPAN><SPAN LANG="en-GB"><I><B>help
	rfreqs</B></I></SPAN><SPAN LANG="en-GB">). This is intended as an
	experimental exploratory tool.  It calculates a score (0–100) for
	the occurrence of groups from a &quot;reference&quot; tree among a
	set of &quot;input&quot; trees.  If the group occurs identically
	(i.e. as monophyletic) in one of the trees, it is counted as 1; if
	the most similar group is non-monophyletic by virtue of
	excluding/including one (or very few taxa), it counts almost as one;
	if the most similar group differs in including/excluding many taxa,
	it counts almost as zero.  Thus, a group which is often
	non-monophyletic in the input trees but only because of a single
	floating taxon, will get a score close to 100. The formula to
	measure the &quot;similarity&quot; </SPAN><SPAN LANG="en-GB"><I><B>S
	</B></I></SPAN><SPAN LANG="en-GB">between two groups is </SPAN><SPAN LANG="en-GB"><I><B>S
	</B></I></SPAN><SPAN LANG="en-GB">= </SPAN><SPAN LANG="en-GB"><I><B>B/(B+(AxW</B></I></SPAN><SUB><SPAN LANG="en-GB"><I><B>a</B></I></SPAN></SUB><SPAN LANG="en-GB"><I><B>)+(RxW</B></I></SPAN><SUB><SPAN LANG="en-GB"><I><B>r</B></I></SPAN></SUB><SPAN LANG="en-GB"><I><B>))</B></I></SPAN><SPAN LANG="en-GB">,
	where </SPAN><SPAN LANG="en-GB"><I><B>B</B></I></SPAN><SPAN LANG="en-GB">=number
	of taxa in both groups or in neither (whichever is smallest),
	</SPAN><SPAN LANG="en-GB"><I><B>A</B></I></SPAN><SPAN LANG="en-GB">=number
	of taxa added to group, </SPAN><SPAN LANG="en-GB"><I><B>R</B></I></SPAN><SPAN LANG="en-GB">=number
	of taxa removed from group (</SPAN><SPAN LANG="en-GB"><I><B>W</B></I></SPAN><SUB><SPAN LANG="en-GB"><I><B>a</B></I></SPAN></SUB><SPAN LANG="en-GB">
	and </SPAN><SPAN LANG="en-GB"><I><B>W</B></I></SPAN><SUB><SPAN LANG="en-GB"><I><B>r</B></I></SPAN></SUB><SPAN LANG="en-GB">
	are weight factors to make removal/addition more costly, set with
	the </SPAN><SPAN LANG="en-GB"><I><B>prunmaj </B></I></SPAN><SPAN LANG="en-GB">command.
	 If group adds/removes more than a certain proportion of taxa
	(default is 0.333) then </SPAN><SPAN LANG="en-GB"><I><B>S</B></I></SPAN><SPAN LANG="en-GB">=0.
	</SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>simgroup
	</B></I></SPAN><SPAN LANG="en-GB">expresion for scripts (see </SPAN><SPAN LANG="en-GB"><I><B>help
	+ simgroup</B></I></SPAN><SPAN LANG="en-GB">), which uses the same
	measure of &quot;group similarity&quot; as the </SPAN><SPAN LANG="en-GB"><I><B>rfreqs
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of May, 2007 </SPAN> (June 2007)<SPAN LANG="en-GB">: </SPAN>
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Program initialization can now be done similarly in the
	Mac/Linux/Windows version, with a unique password system. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The commands that show reduced trees (<I><B>resols</B></I>,
	<I><B>prunnelsen</B></I>) did not use the tree-shrinking
	definitions.  Now they do. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Under exclusive sectorial searches, with sectors analyzed with a
	combined strategy (<I><B>gocomb </B></I>option), if the number of
	starts (<I><B>combstarts</B></I>) was greater than twice the number
	of starts defined for smaller sectors (<I><B>starts</B></I>), the
	program crashed. Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Sectorial searches under auto-weighted optimization, when recording
	to text-buffer search status every few seconds, often
	displayed/saved the wrong scores (this was because the score was
	displayed/saved for trees during intermediate stages of the search).
	 This is fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Running under implied weighting using internal steps could create
	problems under two situations: (1) if some additive character with
	uninformative state(s) was assigned internal steps, the scores
	reported for a search (any search) did not agree with those for a
	subsequent optimization (this was due to a constant difference, so
	it did not affect results, but it was annoying); and (2) if some
	continuous character had been assigned internal steps, tree scores
	under sectorial searches could be wrong (usually considered lower
	than they truly were).  These two are fixed now. [Claudia Szumik] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Linux/Mac versions only:  when running in the background, some
	commands to clear the screen were not ignored, which was annoying. 
	All of them are ignored now. 
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of June, 2007 </SPAN> (July 2007)<SPAN LANG="en-GB">: </SPAN>
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">if</SPAN>  <SPAN LANG="en-GB">the transformation
	cost between two states in a step-matrix character equalled 0, and
	implied weighting was ON, the program could not calculate
	tree-scores during searches.  This was because of the formula used
	to calculate to calculate fits for sankoff characters, which uses
	the minimum possible cost.  The &quot;minimum possible&quot; for
	characters where some transformations cost 0 (which continue being
	unexpected and may produce problems in other fronts!) is now
	considered as unity, so that the score calculations under implied
	weighting are &quot;correct&quot;. [ Santiago Catalano ] </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>hifile
	</B></I></SPAN><SPAN LANG="en-GB">command for scripting, which
	allows handling input files. See &quot;</SPAN><SPAN LANG="en-GB"><I><B>help
	hifile;</B></I></SPAN><SPAN LANG="en-GB">&quot; for details, and
	associated expressions </SPAN><SPAN LANG="en-GB"><I><B>hifchar</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>hifstring</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>hifeof</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>hifline</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>hifnumber</B></I></SPAN><SPAN LANG="en-GB">,
	</SPAN><SPAN LANG="en-GB"><I><B>hifspy</B></I></SPAN><SPAN LANG="en-GB">.
	</SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">If the tree order had been just randomized
	(command &quot;</SPAN><SPAN LANG="en-GB"><I><B>randtrees/;</B></I></SPAN><SPAN LANG="en-GB">&quot;),
	some search command sometimes failed to find all equally
	parsimonious trees.  This was because of a bug which made TNT think
	that additional most parsimonious trees were duplicates of
	preexisting trees, when they were in fact different. Exact searches
	did not place their trees in a tree-group; now they do, in a group
	called &quot;exact_search&quot;. </SPAN>
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of July, 2007 </SPAN> (December 2007)<SPAN LANG="en-GB">:
</SPAN>
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The program now is free.  The password system is changed, and (in
	Windows version) it is now possible to run the program even if you
	have no administrator rights. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Some potentially unsafe memory reallocations were changed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Fixed problems with indicating location of pruned taxa on the
	consensus when input trees had different taxon sets. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Added 64-bit Linux versions, and the possibility of running any
	number of taxa (before, no more than 16383 could be analyzed).  The
	version that can run more than 16383 taxa uses more memory to store
	the trees (as 32-bit ints, instead of 16-bit ints). In 64-bit
	machines, this shouldn't be a problem. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The option of the </SPAN><SPAN LANG="en-GB"><I><B>xread
	</B></I></SPAN><SPAN LANG="en-GB">command that generates data under
	a simple JC model now can take two decimals for the probability of
	stasis.  Before, the highest possible probability of stasis was 99;
	now, it's 99.99.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: it is now possible to
	specify the number of jobs to spawn on each slave (to be used when
	some machines are faster, or have more than a single processor). 
	See online help for the </SPAN><SPAN LANG="en-GB"><I><B>ptnt
	</B></I></SPAN><SPAN LANG="en-GB">command. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Fixed some potential problems when reading groups of taxa or
	characters (or hosts, in parallel versions): groups beyond 31 could
	be accepted in some contexts, even of those groups could not be
	defined). 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added possibility to use branch-lengths defined
	by the user to the option for generating data (see online help for
	</SPAN><SPAN LANG="en-GB"><I><B>xread</B></I></SPAN><SPAN LANG="en-GB">).</SPAN>
		</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Converting a string used to add a white space right after the
	string.  This was annoying under many circumstances [Diego Pol].  No
	white space is added now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Comments embedded within instructions for
	</SPAN><SPAN LANG="en-GB"><I><B>iterrecs </B></I></SPAN><SPAN LANG="en-GB">and
	</SPAN><SPAN LANG="en-GB"><I><B>travtree </B></I></SPAN><SPAN LANG="en-GB">are
	now not counted (maximum is now 4128 bytes of actual commands). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>wcluster
	</B></I></SPAN><SPAN LANG="en-GB">option, which makes wagner trees
	for very large data sets up to 3 times faster (see on-line help for
	</SPAN><SPAN LANG="en-GB"><I><B>mult</B></I></SPAN><SPAN LANG="en-GB">).
	 This is of no use for data sets below 1000 taxa. </SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Plotting synapomorphies common to several trees, while correct in
	itself, sometimes caused subsequent tree-mappings to be incorrect. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the option to not use memory for
	identifying nodes to shrink (which, in large data sets, can be a
	significant amount of memory).  This is set with </SPAN><SPAN LANG="en-GB"><I><B>tshrink!</B></I></SPAN><SPAN LANG="en-GB">
	(i.e. exclamation mark) before reading the data set. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added option to calculate strict consensus trees,
	and to compare trees (</SPAN><SPAN LANG="en-GB"><I><B>tcomp </B></I></SPAN><SPAN LANG="en-GB">command)
	using algorithms which consume very little memory (and which, in the
	case of the strict consensus, are sometimes faster than the previous
	one).  When free memory is low, these algorithms are used
	automatically; their use can be forced with </SPAN><SPAN LANG="en-GB"><I><B>nelsen&lt;
	</B></I></SPAN><SPAN LANG="en-GB">(the default is using low mem
	algorithms only if memory is low, set with </SPAN><SPAN LANG="en-GB"><I><B>nelsen&gt;</B></I></SPAN><SPAN LANG="en-GB">).
	</SPAN>
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of December, 2007 </SPAN> (February 2008)<SPAN LANG="en-GB">:
</SPAN>
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Saving pruned trees (prunnelsen command, or
	Trees/Comparisons/PrunedTrees) sometimes caused freezes (and,
	conceivably, crashes).  This seemed more likely when some taxa were
	excluded a priori, but it may have happened as well under other
	circumstances.  Hopefully fixed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Resampling under TBR-collapsing, when the outgroup was not the first
	taxon in the matrix, corrupted the results. Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	There were problems when the <I><B>autosave </B></I>option was used
	during sectorial searches (the trees saved to file were corrupted). 
	Fixed now. [ David Maddison] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The handling of multiple tree-tags (which used to often cause
	problems) is now cleaner. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Running searches (or sometimes, even optimization of a given tree)
	under auto-weighted optimization with some sankoff characters caused
	problems.  Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Trees were sometimes not properly put into tree-groups after the
	user had re-defined (manually) some tree groups.  Fixed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows only: Excluding taxa from the strict consensus and showing
	their location on the tree, using the menus, did not group taxa
	which belong to a single node in the consensus (as done if using
	commands).  They are grouped now. 
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of February, 2008 </SPAN> (April 2008):<SPAN LANG="en-GB">
</SPAN>
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB"><B>NEW!</B></SPAN>   <SPAN LANG="en-GB">It is now
	possible to read and save </SPAN><SPAN LANG="en-GB"><B>FASTA </B></SPAN><SPAN LANG="en-GB">files.
	Reading: &quot;</SPAN><SPAN LANG="en-GB"><I><B>proc &amp; file</B></I></SPAN><SPAN LANG="en-GB">&quot;.
	  If file starts with =N, then it fills with gaps (the same effect
	is achieved with </SPAN><SPAN LANG="en-GB"><I><B>=N </B></I></SPAN><SPAN LANG="en-GB">after
	the </SPAN><SPAN LANG="en-GB"><I><B>&amp;</B></I></SPAN><SPAN LANG="en-GB">).
	    Saving: </SPAN><SPAN LANG="en-GB"><I><B>export !</B></I></SPAN><SPAN LANG="en-GB">
	</SPAN><SPAN LANG="en-GB"><I><B>filename </B></I></SPAN><SPAN LANG="en-GB">(use
	!! to skip gaps). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Maximum length of taxon names now can be changed,
	with &quot;</SPAN><SPAN LANG="en-GB"><I><B>taxname +N</B></I></SPAN><SPAN LANG="en-GB">&quot;.
	 This has to be done before reading the data set.  In the case of
	Linux/Mac, this change makes the new binaries incapable of
	communicating with old binaries when running in parallel: </SPAN><SPAN LANG="en-GB"><I><B>make
	sure you update slaves</B></I></SPAN><SPAN LANG="en-GB"><I>!!</I></SPAN>
		</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">It is now possible to plot polytomous trees more
	symmetrically than before.  See help for </SPAN><SPAN LANG="en-GB"><I><B>tplot</B></I></SPAN><SPAN LANG="en-GB">.
	</SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">For data in multiple blocks (xread format only),
	it is now possible to have a loose checking for name matches (with
	[match S], where S=similarity), using a Needleman-Wunsch algorithm
	to calculate distances (similarity is obtained dividing edit cost by
	length of shortest sequence and subtracting the result from 1).</SPAN>
	 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Now string conversions (including $taxon,
	$character, etc.) can use the part of the string that comes after
	(&gt;) or before (&lt;) a given symbol x.  To do this for taxon N:
	$taxon &lt;x N.  They can also use the first C characters in the
	string: $taxon:C N (if C is negative, then it uses only the last C
	characters; if C preceded by a + sign, then it uses the characters
	beyond C).  If C is greater than the length of the string, then it
	adds blanks (after –in the case of a negative C, before- the
	string itself).</SPAN>  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Fixed some potential problems with the </SPAN><SPAN LANG="en-GB"><I><B>mxproc</B></I></SPAN>
	<SPAN LANG="en-GB">command (commands following it sometimes were not
	properly parsed), and with displaying of error messages from within
	loops (which sometimes caused crashes).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Scopes of essentially any kind, can now also
	select things for which the string provided appears somewhere.  For
	this, precede the string with a colon.  E.g. if a taxon is called
	</SPAN><SPAN LANG="en-GB"><I>Xus_yus</I></SPAN><SPAN LANG="en-GB">,
	then &quot;taxcode - :yus;&quot; will deactivate that taxon.  This
	can be used when the names contain some taxonomy.  Suposse taxon
	names are: </SPAN>
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"> 
</P>
<P LANG="es-ES" STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
Homo_sapiens_Vertebrata_</P>
<P LANG="es-ES" STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
Pan_trgolodites_Vertebrata_</P>
<P LANG="es-ES" STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
Canis_familiaris_Vertebrata_</P>
<P LANG="es-ES" STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
Musca_domestica_Arthropoda_</P>
<P LANG="en-GB" STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
Araneus_diadematus_Arthropoda_ 
</P>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"> 
</P>
<P LANG="es-ES" STYLE="margin-left: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="en-GB">you</SPAN>  <SPAN LANG="en-GB">can then create a
taxon group with either of these two groups by typing: </SPAN>
</P>
<P STYLE="margin-left: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
 
</P>
<P STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="en-GB">agroup =0 (</SPAN><FONT COLOR="#000000"><SPAN LANG="en-GB">Vertebrates</SPAN></FONT><SPAN LANG="en-GB">)
:_Vertebrata_ ; </SPAN>
</P>
<P LANG="en-GB" STYLE="margin-left: 1.48in; margin-top: 0.07in; margin-bottom: 0.07in">
agroup =1 (Arthropods) :_Arthropoda_ ; 
</P>
<P STYLE="margin-left: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
 
</P>
<P LANG="en-GB" STYLE="margin-left: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
You can apply the same logic to taxon names when reading trees in
parenthetical notation.  Thus, 
</P>
<P STYLE="margin-left: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
                     <SPAN LANG="en-GB">tread</SPAN><SPAN LANG="es-ES">
 </SPAN><SPAN LANG="en-GB">( ( :_Vertebrata_ ) ( :_Arthropoda ) ) ; </SPAN>
</P>
<P LANG="es-ES" STYLE="margin-left: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="en-GB">will</SPAN>  <SPAN LANG="en-GB">create a tree in
which vertebrates and arthropods are monophyletic groups.</SPAN></P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	The tread command now can read taxon groups. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">For very large data sets (i.e. over 10,000 taxa),
	speed was vastly improved in many operations which require
	tree-sorting.</SPAN>  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Searches could in some rare cases be terminated with a message of an
	internal error in memory allocation.  This is less likely now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows only: under auto-weighted optimization, attempting to switch
	to tree-viewing mode when a tree was polytomous caused the program
	to exit. Fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Now it is possible to condense trees (</SPAN><SPAN LANG="en-GB"><I><B>condense
	</B></I></SPAN><SPAN LANG="en-GB">command) excluding some taxa. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Low memory algorithms are now also available for
	majority rule consensus (</SPAN><SPAN LANG="en-GB"><I><B>majority
	</B></I></SPAN><SPAN LANG="en-GB">command); in addition to consuming
	less memory, the new algorithms sometimes are (for large data sets)
	faster than the previous (default) ones.  This is set with </SPAN><SPAN LANG="en-GB"><I><B>nelsen
	&lt;;</B></I></SPAN><SPAN LANG="en-GB">.  One limitation of these
	algorithms is that taxa cannot be ignored during consensus
	calculation, and trees cannot be collapsed temporarily (thus the
	addition of the previous option to the </SPAN><SPAN LANG="en-GB"><I><B>condense
	</B></I></SPAN><SPAN LANG="en-GB">command, to physically collapse
	trees and exclude taxa). </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">It is now possible to truncate long taxon names
	on output to N letters, with the </SPAN><SPAN LANG="en-GB"><I><B>taxname
	[ N</B></I></SPAN> <SPAN LANG="en-GB">option (use </SPAN><SPAN LANG="en-GB"><I><B>taxname
	]</B></I></SPAN> <SPAN LANG="en-GB">to output complete name).</SPAN>
		</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of April, 2008 </SPAN> (August 2008):</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The parsing of long matrices with multiple data
	blocks was very slow (due to the addition, in the previous version,
	of the </SPAN><SPAN LANG="en-GB"><I><B>match </B></I></SPAN><SPAN LANG="en-GB">option,
	which allows for application of the Needleman-Wunsch algorithm to
	taxon names; note that now all letters after a cuadruple underscore
	are ignored). The parsing is now as fast as it was before.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">The </SPAN><SPAN LANG="en-GB"><I><B>verbose
	</B></I></SPAN><SPAN LANG="en-GB">option as specification for a
	block (within square brackets) was added.</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Very long group names (i.e. within the length
	specified with </SPAN><SPAN LANG="en-GB"><I><B>taxname+</B></I></SPAN><SPAN LANG="en-GB">,
	but over the previous limit of 32 characters) could cause errors (or
	possibly crashes).</SPAN> 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the </SPAN><SPAN LANG="en-GB"><I><B>int
	</B></I></SPAN><SPAN LANG="en-GB">option to the </SPAN><SPAN LANG="en-GB"><I><B>bbreak
	</B></I></SPAN><SPAN LANG="en-GB">command.  This option uses a
	special kind of sorting for the characters to be optimized during
	swapping; option 1 considers only the most relevant characters,
	option 2 re-orders them, so that the most relevant are checked first
	(often requiring examination of fewer characters).  These two
	options are useful only for very large data sets (&gt;10,000 taxa)
	with many characters.</SPAN> 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows only: attempting to swtich to tree-viewing mode without
	enough memory available to optimize a tree crashed the program.  The
	program now attempts to recover more gracefully from that [Santiago
	Catalano]. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Parallel versions only: improved memory
	management and speed for recovering trees (with either </SPAN><SPAN LANG="en-GB"><I><B>spy
	</B></I></SPAN><SPAN LANG="en-GB">or </SPAN><SPAN LANG="en-GB"><I><B>get</B></I></SPAN><SPAN LANG="en-GB">)
	from sectorial searches in parallel. Also improved memory management
	in a couple other places. </SPAN>
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added the option to never make space for
	assigning costs to sankoff characters.  When characters are read as
	32-states this can save a small but yet significant amount of memory
	(see </SPAN><SPAN LANG="en-GB"><I><B>help costs</B></I></SPAN><SPAN LANG="en-GB">).
	</SPAN>
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Fixed potential crashes (or erroneous calculations) with TBR under
	sectorial searches (specially likely to cause problems with
	recursive sectorial searches).  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	In 64-bit versions with no taxon limit, trying to open a file for
	saving trees for more than 16,383 taxa in compact format and append
	mode caused an improper error message to be displayed.  Fixed. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	A bug introduced in the April, 2008 version: the prunnelsen command
	(Trees/Comparisons/PrunedTrees) crashed (or produced bogus results)
	when input trees had polytomies (and perhaps under other
	circumstances).  This was because of the faster tree-sorting, which
	had a problem for sorting reduced trees. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	<SPAN LANG="en-GB">Added </SPAN> possibility to not prepare memory
	space for sankoff costs when reading the data.  For data sets with
	many characters and many states, this can save a small (but
	significant) amont of memory, if you do not plan to use step-matrix
	characters. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Improved
	memory usage of recursive sectorial searches in master process
	(which formerly allocated some amount of unnecessary memory). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixed some
	glitches with prediction of number of clusters for reduced data sets
	during sectorial searches. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">A bug which
	could have caused errors in either sectorial searches, or any search
	in which some taxa had been deactivated (either causing TNT to
	crahs, or to miss some TBR rearrangements), was fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Compact
	tree files for more than 16383 taxa in append mode could not be
	opened.  They can now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Testing of
	monophyly (hard constraints) for searches in very large data sets is
	now much faster. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Sectorial
	searches for cases where no character had less than 9 states, but
	sector ended up having some characters with 8 states or less, often
	asked for inordinate amounts of slack, too large to satisfy. Fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Report of
	&quot;more slack required&quot; informed of the increase over
	current setting; it should have said: 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.07in"> 
</P>
<P STYLE="margin-left: 0.49in; text-indent: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
      &quot;... increase slack in X and try again...&quot;</P>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.07in"> 
</P>
<P STYLE="text-indent: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
but it confusingly said:</P>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.07in"> 
</P>
<P STYLE="margin-left: 0.49in; text-indent: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
       &quot;... increase slack to X and try again...&quot; 
</P>
<P STYLE="text-indent: 0.49in; margin-top: 0.07in; margin-bottom: 0.07in">
<SPAN LANG="es-ES">The </SPAN><FONT COLOR="#000000"><SPAN LANG="es-ES">value</SPAN></FONT><SPAN LANG="es-ES">
reported is now the value to which the slack should be set.</SPAN></P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Sectorial
	searches for cases with lots of characters with different prior
	weights, and with some 9-32 state chars which  became 8-state or
	less for the sector, produced problems (messages of internal errors
	or undetected erroneous length   calculations).  Fixed. [Mark
	Siddall] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Sectorial
	searches for cases where matrix had some 32-state characters and no
	16-state, but sector ended up having some 16 states, caused crashes.
	 Fixed. 
	</P>
</UL>
<P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of June, 2008 (August 2008): 
</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows versions only: added option to contract the trees (in the
	pre-viewing screen) so that the entire tree fits the screen (this
	makes it possible to look at very large trees).  To toggle this,
	press &quot;f&quot;.  Taxon names may overlap when doing that and it
	may be better to use color mappings to indicate groups; in this
	case, taxon names may be hidden by pressing &quot;n&quot; (also a
	toggle).  If taxon names are hidden, a single left-click on a node
	toggles display of the name of that taxon (or its descendants).  To
	move the tree by small steps, use &quot;k&quot; and &quot;l&quot;.  
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Searches under tree-constraints could crash the program when (1)
	there were pre-existing trees in memory, and/or (2) no tree-searches
	had been done before.  
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in"><SPAN LANG="en-GB">Fixes/changes
to the version of August, 2008 </SPAN> (November 2008):</P>
<UL>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Defining positive or negative constraints, and then changing the
	number of maximum trees, produced freezes or crashes (note that
	changing number of max. trees first and then defining the
	constraints should have produced no problems).   This is fixed now.
	[Martín Ramírez] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Windows only: defining from the menus negative constraints, or
	positive constraints with some floating taxa, caused an internal
	error message.  The constraints could thus be defined only by using
	commands.  Fixed now.  [ Julián Faivovich ]. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Running multiple random addition sequences under implied weights,
	accepting suboptimal trees caused crashes (and, possibly, unexpected
	bahviour).  Running multiple random addition sequences accepting
	suboptimal trees is generally undesirable (except under very
	specific circumstances, e.g. running few replications saving many
	trees each); however, one expects it to function.  The problem was
	because the value of maximum score acceptable during a replication
	depended on the score of the best tree found so far (i.e. in
	previous replications) and the value of suboptimal.  This meant
	that, sometimes, a tree which improved the score during a
	replication was nonetheless “unacceptable”, causing further
	problems.  Now, the maximum acceptable score for multiple random
	addition sequences under implied weights is determined by the best
	tree in that replication alone (when not using implied weighting, it
	continues being, as before, the best tree so far).  [ Martín
	Ramírez ] 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Linux 64-bit versions only: re-setting maxtrees to a large number
	when character names had been defined either crashed the program or
	issued an error message stating that not enough RAM was available
	(when in fact it was).  Fixed now. 
	</P>
	<LI><P LANG="en-GB" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	Linux 64-bit versions only: several error or notification messages
	could have potentially produced bogus output –don’t know whether
	this actually happened to anyone.  It’s safe now. 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes to
the version of November, 2008 (February 2009):</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Reading
	trees with excess/unbalanced parentheses caused the program to abort
	reading trees; the program now tries to fix the trees. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">This
	version includes some work in progress, on landmark data (unstable
	and unfinished; missing entries cannot yet be handled). This is
	mostly undocumented; future versions (and a paper) will document it
	properly.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Windows
	versions only: it should now be possible to double-click (or
	drag-and-drop) files saved in folders with spaces in the names!</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Linux/Mac versions only: added the option to replace the
	instructions for TNT when it is running in the background. If the
	file <I><B>tnt_execute_PID </B></I>(where PID is process ID of the
	TNT instance to reset) exists in current directory, then when TNT
	runs out of instructions –or finds a <I><B>quit </B></I>command,
	or file <I><B>stop_tnt_PID </B></I>exists in current directory (see
	additions to version of November 2005)- then TNT begins taking input
	from file –renaming it as a new file, so that instructions can be
	replaced again. With this (<I><B>pause_tnt</B></I>, <I><B>stop_tnt</B></I>,
	and <I><B>execute_tnt</B></I>) the user can have complete control of
	a TNT process running in the background.</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Running constrained sectorial searches (CSS) with user-defined tree
	constraints in which there was a (large) basal polytomy caused bogus
	results, crashes or freezes. This is fixed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Relative
	fit differences when TBR-collapsing during implied weighting may
	have been miscalculated (underestimated). This error is unlikely to
	have been noticed, except by someone who was paying very close
	attention to the results. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Added the option to calculate bremer supports by keeping track of
	the score differences during TBR swapping. This is the “!”
	option of the <I><B>bsupport </B></I>command. This is probably the
	best way to estimate bremer supports for very large data sets. To my
	knowledge, the only program which has implemented this method is POY
	(versions 3 and 4). The implementation in TNT differs from POY's in
	that TNT can swap several trees (keeping track of the score
	differences among the source trees themselves), it can ignore the
	positions of selected taxa, and it can calculate relative bremer
	supports in addition to absolute supports.</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Added the <I><B>track </B></I>option to the <I><B>sectsch </B></I>command,
	as well as the macro expressions <I><B>nodtosect</B></I>, <I><B>biginsect</B></I>,
	<I><B>bignotsect</B></I>, and <I><B>bigntax</B></I>. These should
	allow calculating approximmate support values from analyses of
	sectors of the tree. NOTE: For running TNT in parallel, this
	addition means that the slaves must be updated, too, or they won't
	be able to receive the data from the master.</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 The <I><B>riddup </B></I>command (to eliminate or reinsert
	duplicate taxa) is now, for large data sets, orders of magnitude
	faster. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 The reactivating/reinserting option of the <I><B>riddup </B></I>command
	(<I><B>riddup - </B></I>) may have altered node numbers for the
	trees (so that node numbering did not follow the same standard as
	all other TNT command).</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Added the <B>“/ ”</B><I><B> </B></I>option to the <I><B>riddup
	</B></I>command, to reinsert duplicate inactive taxa into the
	tag-tree. This can be used to calculate supports with duplicates
	deactivated and store them in tags; subsequent re-insertion of the
	duplicates into the tree shuld not change the support values. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Added the <I><B>chkroot</B></I> option to the <I><B>sectsch</B></I>
	command; this affects only XSS searches, making sure that the tree
	base (often left out of selections) is selected.  This is to be used
	if you really want to make sure you cover all the sectors of the
	tree (e.g. for estimating supports using analysis of sectors).</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">
	 Linux/Mac versions only: Since the <I><B>chkroot</B></I> option
	affects the way in which exclusive sectors are selected (with ptnt
	/sector *N), a new expression, treeparts, was added.  This lets you
	know how many tasks to spawn in a parallel job where sectors are to
	be analyzed under <I><B>chkroot</B></I>.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Unlikely to
	have affected anybody: writing tree-tags during a recursive
	sectorial search, and then plotting the tags after having exitted
	the sectorial search, corrupted the taxon names –so that any
	command which attempted to write taxon names caused crashes.</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixes/changes
to the version of February 2009 (March 2009): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Made the
	<I><B>track </B></I>option of <I><B>sectsch </B></I>more stable.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Parallel
	versions only: couldn't run sectors when some taxa were
	deactivated.  It works ok now. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Fixed a few
	problems with the landmark stuff (but this continues being in
	pre-beta).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Slightly
	changed the way in which existing tree-tags are handled when doing
	recursive sectorial searches</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Added the
	DSS option to the <I><B>sectsch </B></I>command, and (for parallel
	versions only) the &quot;sector D&quot; option to the <I><B>ptnt
	</B></I>command.  This option provides an easy way to  effect a
	sectorial search around a node specified by the user. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">When
	renaming chars., a blank before the semicolon caused an additional
	state to be named &quot;  &quot; (blank). Only real strings used
	now.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Added
	option to collapse user-specified nodes to the <I><B>condense
	</B></I>command. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Scripting:
	vastly improved speed for the expression <I><B>eqgroup </B></I>in
	large data sets.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Parallel
	versions only: the <I><B>sprit </B></I>and <I><B>tbrit </B></I>commands
	could not be run in slaves. They can now; now they silence the
	output automatically (as in <I><B>travtree </B></I>or recursive
	sectorial searches).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Parallel
	versions only: the <I><B>treeparts </B></I>expression may have
	miscalculated number of parts if no search had been done before. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Re-inserting
	duplicate taxa into tree(s) caused the  program to crash.  This was
	introduced in previous version, with the possibility of reinserting
	taxa into tree-tags (which worked ok; only actual trees caused
	problems).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.07in">Added “help
	topics” (i.e. <I><B>help [ topic ] </B></I>displays all commands
	for topic <I><B>topic</B></I>).</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of March 2009 (April, 2009): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Running
	resampling with <I><B>xmult </B></I>and/or <I><B>sectsch </B></I>for
	small data sets (20 or fewer taxa) sometimes caused crashes.  This
	is really not something people were expected to do (running such
	small data sets with those routines is an overkill), but it should
	have worked anyway.  Fixed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">On some
	rare ocassions, data sets with continuous characters may either have
	(a) interrupted searches and displayed an error message about an
	“internal error in TBR calculations”, or (b) never finished
	searching, although the search could be interrupted and had the
	appearance of working normally.  This seems to have been more likely
	to occur under Windows, due to code changes made by the compiler to
	my code during optimization.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	<I><B>maketables + </B></I>option, to save in an array the values
	displayed in a table.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The parsing
	of definitions of positive and negative constraints sometimes didn't
	work properly (in either Windows or other versions).</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	 Some options for analyzing landmark data are now ready for use. 
	See <I><B>help lmark</B></I>.  For the time being, landmark data can
	be mapped onto trees, but no tree searches are implemented in TNT. 
	Searches can be implemented only in combination with the scripting
	language (see <A CLASS="western" HREF="http://www.zmuc.dk/public/phylogeny/TNT/scripts"><FONT COLOR="#800000"><SPAN LANG="en-US"><U>here</U></SPAN></FONT></A>
	for some scripts).  Added several macro expressions (<I><B>lmscore,
	lmwts, lmfactors, lmnchar, lmnpoints</B></I>), useful to handle
	landmark data.  
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes
to the version of May 2009 (June, 2009)</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	 when a landmark comprised only identically positioned points, the
	(default) <I><B>noinscale </B></I>option produced correct results,
	but the <I><B>inscale </B></I>option produced erroneous cost
	calculations (even when the cost contribution for the landmark was
	0). This is fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Landmarks with a missing entry in the outgroup caused all sorts of
	problems (miscalculations, etc.).  Fixed now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Added the options <I><B>termpoints </B></I>and <I><B>options </B></I>to
	the landmark command (see <I><B>help command</B></I>).</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Windows versions only: when running landmarks, now it is possible to
	better place the tree on screen if the (default) auto-shift of wide
	screens (under <U>Format/DisplayBuffer</U>) is turned off. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Parallel versions only: running the <I><B>ptnt </B></I>command from
	within a <I><B>tbrit </B></I>or <I><B>sprit</B></I> loop caused
	(after changes to <I><B>sprit </B></I>and <I><B>tbrit </B></I>done
	in March, 2009) problems with the memory management for the macros. 
	It can be run ok now. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Versions with no taxon limit (whether 64 or 32 bit): the option to
	map a character on several trees at a time (<I><B>map [</B></I>, or
	<U>Optimize/Characters/ CommonMapping</U>) produced erroneous
	output.  Fixed now [ Martín Ramírez ] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	The <I><B>travtree </B></I>command had problems on trees with many
	polytomies (versions with no taxon limit were more prone to the
	problem).   Fixed now. [ Diego Pol ] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Windows only: added option to use state legends from a specified
	character when printing tree-tags in color (with the <I><B>ttag :
	</B></I>option). Before, <I><B>ttag : </B></I>always used the state
	names from the first character in the matrix, which was confusing [
	Martín Ramírez ]</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Linux/Mac only: there were problems when resetting instruction files
	from background (with <I><B>execute_tnt_PID</B></I>, see under <I><B>help
	bground</B></I>), specially when macros were connected, and when the
	<I><B>stop_tnt_PID </B></I>file was created right at the time when a
	<I><B>ptnt wait </B></I>loop was being executed (which interrupted
	the wait loop, but did not begin to parse the new set of
	instructions). :-(</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	The <I><B>continue </B></I>comand was not properly recognized from
	within <I><B>tbrit </B></I>or <I><B>sprit </B></I>loops (after
	changes introduced in March, 2009).  As far as I know, they work ok
	now.</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes
to the version of June 2009 (July, 2009)</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	The <I><B>rfreqs </B></I>command did not properly handle elimination
	of some taxa.  It does now.</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Changed the way in which similar groups in trees are recognized
	(macro expression <I><B>simgroup</B></I>, and <I><B>rfreqs </B></I>command).
	 The new way uses a lot less memory (previous algorithm needed
	roughly an extra 3T<SUP>2</SUP>/4 bytes for T taxa, while the new
	algorithm uses only 16T extra bytes in the case of versions with no
	limit in the number of taxa, 8T otherwise –for the 73,060-taxon
	data set of Goloboff et al. 2009, this is over 4 GB instead of only
	1.2 MB), and is a lot faster (for 500 taxa, 20 to 1, for 2500, 80 to
	1, for 13000, 300 to 1).  This means that the scripts used by
	Goloboff et al. (2009) in their eukaryote paper, can now be used on
	a windows machine, allocating only 1.5 GB of memory. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Given the above, the view command was added to Windows versions, but
	only with the “search” option (i.e. <I><B>view : xxx;</B></I>
	positions the cursor at the next occurence of string “<I><B>xxx</B></I>”).</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	A strange bug occured in some unusual circumstances during searches,
	when the nuber of rearrangements examined had a certain number of
	digits.  This was due to a bug in the function that writes the
	number of rearrangements examined, and only under 32-bit Linux were
	any effects detected.  The bug caused unstable/erratic behavior
	during or after the search, and may have caused crashes as well. 
	This is fixed now.  [ Rafael Miranda ] 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of July 2009 (September, 2009): 
</P>
<UL>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	Calculation of branch lengths was totally screwed up when there were
	sankoff characters.  They're ok now.  [ Diego Pol ] 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	The <I><B>sprit </B></I>or <I><B>tbrit </B></I>commands could cause
	crashes or freezes (I believe, after changes introduced March,
	2009).  
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	It is now possible to re-align 2D landmark data using RFTRA.  The
	code for this (not stable yet!) was written mostly by Santiago
	Catalano. 
	</P>
	<LI><P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">
	When naming loops, all letters were downcased, but when subsequently
	accessing loop values the name was not.  This caused unexpected
	errors if you attempted to name a loop with upper-case letters –loop
	values could subsequently be accessed only using lower case.  Loop
	name is now read in lower or upper case (and continues being
	accessed in the same way). [ Salvador Arias ]</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of September 2009 (October, 2009)</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The command
	<I><B>chomo </B></I>(character homoplasy) was supossed to take a
	list of trees as argument, but it didn't –it always did all trees.
	 [ Salvador Arias ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	only: saving data for “only active characters” (<U>Data/saveData</U>)
	saved block definitions for the original matrix (i.e. the matrix
	with all characters) with a <I><B>blocks </B></I>command at the end
	of the file.  This block definition was incorrect, and unnecessary,
	since the data were saved in proper blocks (thus, reading the matrix
	naturally produced the right block definitions).  The <I><B>blocks
	</B></I>command at the end of the file is now skipped when saving
	only active characters.  [ Mark Siddall ] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Renaming
	characters but without naming the states created bogus names for
	states. States remain unnamed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	versions only: improved the aesthetics and cosmetics (if not the
	ethics) of the display for landmark mapping. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Improved
	and added new options for re-aligning landmark data; see help for
	the <I><B>lmrealign </B></I>command (also added menu options for
	realigning, under <U>Data/Landmarks</U>).  The tree-guided
	algorithms provide the best fit for the tree used as guide, using a
	method by S. Catalano and P. Goloboff (in prep.).  The code for
	alignment was written in collaboration with S. Catalano.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	versions only: added to the menus some options for landmark
	optimization, under <U>Settings/LandmarkOptimization</U>, and the
	possibility to call the mapper for landmarks from the menus (under
	<U>Optimize/Characters/Landmarks</U>).</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of October 2009 (December 2009)</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">There was a
	bug, unlikely to be noticed by users, which made sectorial searches
	use “combined strategies” (as in <I><B>gocomb</B></I>) when no
	value for gocomb had been set by the user and the sector selected
	was large enough to be analyzed with tree-drifting.  This did not
	affect searches that defined a sector size above which to use
	combined strategies, and it did not affect searches with
	user-defined algorithms for each sector. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Some
	specific combinations of sector sizes with exclusive sector
	selections may have caused memory problems which resulted (most
	likely) in crashes.  This could happen only for relatively large
	sectors (almost half the taxa).  This is fixed, and it is now
	possible to run exclusive sector selections dividing tree in 2
	pieces (minimum used to be 3).  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	option to reroot tag-tree, and to specify an internal node as
	rooting point (see online help for <I><B>reroot</B></I>).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Parallel
	versions only: an unlikely problem: when running some resampling in
	slaves, but not using any actual search routine to analyze each data
	set (yeah, right!), there were problems if the results were spied
	with <I><B>ptnt spy </B></I>(<I><B>ptnt get</B></I> worked ok). 
	Spying should be ok now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Problems
	could also have arisen after resampling using the low-memory
	consensus algorithms (probably needed for very large data sets),
	when some taxa had been deactivated.  Fixed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">For very
	large numbers of taxa, the speed of the low-memory majority rule
	consensus algorithms has been vastly improved.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Improved
	the way in which initialization of the program is carried out in
	Linux and Mac when it is run for the first time (people using Mac
	were specially adept at screwing up when installing).</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of December 2009 (January 2010) 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in"> Added the
	<I><B>grptogrp </B></I>(=group-to-group) expression to the scripting
	language.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">A few
	really minor/cosmetic changes. 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of January 2010 (March, 2010) 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in"><I><B>Windows
	only</B></I>: in the dialog for <U>Optimize/CountSpecificChanges</U>,
	selecting “all trees” after having selected some trees did not
	actually optimize all trees –it used the previous tree-selection
	again.  Fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The maximum
	length of taxon names is now also used for the maximum length of
	tree-tags (if larger than 128). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">There was a
	memory leak when naming loops; if the loop was repeated a large
	enough number of times, then this may have caused out-of-memory
	problems that shouldn't have been there.  Fixed now.  [ Salvador
	Arias ]</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of March, 2010 (June, 2010): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">there were
	problems with character-state trees, both with tree-length
	calculations themselves (due to problems with internal binary
	recoding), and with the fit expression for individual characters
	(the expression calculated the fit for the character-state tree as a
	whole, instead of using the sum of fits for the binary variables
	representing the character, producing an inconsistency with values
	reported by searches or for the entire tree). [Martín Ramírez]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	option to calculate the fit for character-state trees as units,
	under implied weighting, instead of decomposing them in binary
	variables.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added
	option to read group names in scripting expressions.  Also added
	expressions <I><B>$agroup</B></I>, <I><B>$tgroup</B></I>, <I><B>$xgroup</B></I>,
	and <I><B>$hgroup</B></I>. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Typing the
	wrong [topic] for <I><B>help </B></I>could crash the program. 
	Fixed. [Jan De Laet ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Linux/Mac
	only: Improved the way in which the program accesses the home
	directory to read/store password (after accepting license terms) and
	command history.  Before, the program did this by means of a
	temporary file created in current directory, which could create
	problems if the user was running TNT in a directory without write
	permissions.  Jan De Laet provided me with more proper code
	(thanks!), so that keeping track of acceptance of license terms and
	command-history are now cleaner. [Jan De Laet]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">A bug
	introduced in Feb. 2008 (with the faster tree-sorting operations)
	but discovered only recently: calculating pruned consensus
	(<I><B>prunnelsen</B></I>, or <U>Trees/Comparisons/PrunedTrees</U>)
	could produce bogus results or output.  This happened only when
	displaying the results, not when simply saving pruned trees to
	memory.  This was because some tree-simplifying operations done when
	pruning made the trees intractable by the new tree-sorting routines.
	 Fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Depending
	on the set of input trees, reduced the amount of memory needed to
	calculate SPR differences between large trees (<I><B>sprdiff</B></I>).
	 In many cases, the algorithm is also about 30% faster. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Last minute
	fixes to the June version: some of the previous fixes created
	problems for many character-mapping options under implied weights. 
	The version with this problem was up in the web for about 10 days. 
	If you downloaded it before, and sometimes use implied weightng,
	make sure you get the replacement version.  Also fixed a long
	standing (but previously undiscovered) bug in calculation of scores
	under implied weights, for step-matrix characters that were actually
	equivalent to Fitch characters with weight greater than unity –this
	led to miscalculations of tree-scores during searches. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Mac 64 bits
	only: fixed a long standing (but previously undiscovered) bug, when
	printing tables (and possibly other kinds of output) with numbers
	having decimals (e.g. implied weighting scores, length with
	continuous characters included). 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of June-August, 2010 (October, 2010): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Parallel
	versions only: fixed problems deciding RAM in slaves in 32-bit
	versions; better estimation of amount of RAM needed in slave.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Parallel
	versions only: setting number of tree-groups to other than 32
	crashed slaves. Fixed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The command
	<I><B>hybrid </B></I>often crashed the program; now the two trees
	can be given as a scope (or tree-group).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Parallel
	versions only: improved the behaviour of launching new jobs in
	clausters with slow communication.  Before, launching a job with
	many tasks for a big data set could overload pvm daemons; the use of
	communication at that initial stage is now more parsimonious.  Also,
	improved the speed with which slaves can communicate for many tasks.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Running
	under implied weighting some sankoff characters with more than 16
	states, or sankoff characters with any number of states on versions
	with no limit on the number of taxa, produced internal errors (and a
	message warning about score miscalculation).  Fixed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Large data
	sets required a lot of RAM to run under implied weighting, most of
	which was needed for buffering steps under tree-fusing.  If the
	amount of RAM allocated is too low for tree-fusing under implied
	weighting, tree-fusing is simply disabled, but the rest of the
	searches can be carried out. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added
	options for “extended implied weighting.”  This allows defining
	sets of characters with constant weight, sets of characters to be
	reweighted according to group homoplasy (instead of individually),
	and different weighting strengths for different characters
	(including the possibility of taking missing entries into account,
	extrapolating from homoplasy in observed entries to missing
	entries).  This is a complex option (it took a month of intense
	programming), so it may have some glitches here or there.  See
	details with “<I><B>help xpiwe;</B></I>”.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Improved
	the behaviour of recursive sectorial searches on several fronts (now
	including, in parallel versions, the possibility of launching slave
	jobs from within the sectorial search). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Last minute
	fix to the update:  SPR differences (after changes introduced june,
	2010) typically produced meaningless values when moves needed to
	produce/resolve polytomies were counted.  Fixed now. [ Brian Andres
	] 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of October, 2010 (April, 2011): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Now all
	versions (Windows included) write to log file (if open) the version
	number and date, as well as OS. [ David Maddison ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	possibility to save HTU's together with the matrix (by specifying a
	tree to use for reconstructing the HTU's, see online help for
	<I><B>xread</B></I>).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Changed the
	behavior of the <I><B>keepall </B></I>option of the <I><B>xmult
	</B></I>command; now, when doing more than one <I><B>hit </B></I>to
	the best length, <I><B>keepall </B></I>retains the trees resulting
	from the fusing of the initial replications.  Together with
	<I><B>noupdate</B></I>, this can be used to save the trees resulting
	from each set of replications (e.g. <I><B>xmult = hit 5 noupdate
	keepall</B></I>).  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Now the
	color of tree-branches in “tree-tags” (<I><B>ttag </B></I>command)
	can be specified (on a branch-per-branch basis) as RGB color codes
	(in parentheses, separated by commas).  You can also specify branch
	thickness (as a fourth number within the parentheses).  This is used
	when saving tree-diagrams as SVG files in all versions, and in the
	windows versions (where the branch color/thickness can be changed,
	when the tree is unlocked, by double right-clicking on the node and
	entering the RGB color and thickness). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Linux/Mac
	versions: now it is possible to obtain help for each command by
	typing &quot;<I><B>command ?</B></I>” (this used to be available
	only for Windows versions).</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of April, 2011 (July, 2011): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	extrapolator (used for extended implied weighting under user-defined
	weighting functions, and for the <I><B>intpol </B></I>scripting
	expression) could sometimes freeze (or take a very long time to
	produce calculations). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	versions, running under VISTA: there were problems (which I hadn't
	seen myself, not having a machine with Vista) with reporting
	progress of searches and time-consuming operations.  The program
	stopped responding, and searches could not be interrupted.  This
	should work now.  I have not so far been able to make the “pause”
	button work properly under Vista, reason for which I hve made it
	optional (to enable pausing, which works under XP, type “<I><B>pause[;</B></I>”
	at the command line). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	“!” option of the <I><B>tcomp </B></I>command, which calculates
	the PCR index (Pol &amp; Escapa, 2009) for the specified taxa.  This
	is intended to facilitate calculation of PCR (it is much faster than
	the original implementation using scripts, and can handle much
	larger cases). There is also work in progress, in the PCR command,
	but this is not yet documented. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">A few
	cosmetic changes here or there. 
	</P>
</UL>
<P CLASS="western" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes
to the version of July, 2011 (August, 2011): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	only: fixed glitches with the behavior of the new report window, and
	with the focus after execution of some command (this had been
	changed with the last version, it now behaves more like before,
	automatically going back to command line without the need of using
	the mouse).</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added
	option to extrapolate user-defined weighting functions for
	weighting-sets (both with a unique concavity, or extrapolating to
	missing entries). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixed some
	minor problems here or there with the interpolator (it had some
	tendency to freeze or take too long, for some specific curve
	shapes). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">There were
	problems calculating minimum possible numbers of steps for
	continuous characters with lots of polymorphisms [ Bruno de Medeiros
	] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	commands for realigning landmark configurations are now more stable,
	and  include the tree-based alignment algorithm by Catalano &amp;
	Goloboff (in press, <I>Syst</I>. <I>Biol</I>.).  Most of the code
	for aligning landmarks was written by S. Catalano. 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of August, 2011 (September, 2011): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">A remaining
	bug (which I had not discovered previously): when there are
	continuous characters but none is informative, length of
	uninformative continuous characters is not reported during searches.
	this affects nothing, really, but it may confuse users.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Saving DNA
	data used to indicate polymorphisms by enclosing the nucletides in
	square brackets; this made it harder to export data to other
	programs (such as RaxML).  Now, saving DNA data uses the IUPAC codes
	for polymorphisms. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Scripting:
	the loop command automatically was set to decreasing or increasing,
	depending only on the initial and ending values.  Now, this is done
	if the increase is not specified; explicitly specifying a negative
	increase, the loop is now always set as decreasing (and viceversa);
	thus, loops such as:  
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-left: 1.11in; margin-top: 0.07in; margin-bottom: 0in">
<I><B>loop  0-1   10 </B></I>
</P>
<P STYLE="margin-left: 1.11in; margin-top: 0.07in; margin-bottom: 0in">
<I><B>loop  10+1   0 </B></I>
</P>
<P STYLE="margin-left: 0.51in; margin-top: 0.07in; margin-bottom: 0in">
will never get executed, only: 
</P>
<P LANG="es-ES" STYLE="margin-left: 1.13in; margin-top: 0.07in; margin-bottom: 0in">
<I><B>loop  0+1   10 </B></I>
</P>
<P STYLE="margin-left: 1.13in; margin-top: 0.07in; margin-bottom: 0in">
<I><B>loop  10-1   0 </B></I>
</P>
<P STYLE="margin-left: 0.52in; margin-top: 0.07in; margin-bottom: 0.17in">
will. 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixed
	occassional problems with running tree-searches with continuous
	characters (branch-swapping sometimes would never finish).  This
	could be a problem for cases where many searches were done (such as
	resampling), thus increasing the chances that one of the starting
	points would lead to this deadlock situation. [ Juan Manuel Díaz
	Gómez ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	versions only: After April 2011 (when I switched machine and the
	version of the Watcom compiler), it became impossible to deactivate
	taxa, either through menus or commands. Now it works again. [ Mario
	Cozzuol]. 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of September, 2011 (December, 2011): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	options to handle taxonomy (<I><B>taxonomy</B></I> command,
	<U>Trees/Taxonomy</U>). In addition to the documentation for
	taxonomy itself, there are related entries under <I><B>copytree </B></I>(how
	to make the tag-tree into a taxonomy), <I><B>taxname</B></I> (how to
	make taxonomic changes, transferring or synonymizing groups), and
	<I><B>outgroup</B></I>/<I><B>reroot </B></I>(how to make use of
	taxonomic information to define tree-rooting). In connection to the
	possibility of making tag-tree into a taxonomy, also added the
	option to edit tree-tags under Windows.  Creating new categories
	with <I><B>taxname </B></I>is possible, but tricky.  Here is how. 
	Assume Barychelidae, Theraphosidae, and Paratropididae are families
	of Mygalomorphae, and you want to create a new category,
	Theraphosoidina, to which these three families belong. This needs
	<U><B>two </B></U>steps, one to make a new group Theraphosoidina (at
	the root of the taxonomy), the other to make that new new group part
	of Mygalomorphae: 
	</P>
</UL>
<P STYLE="margin-left: 0.98in; margin-right: 0.47in; text-indent: -0.01in; margin-top: 0.07in; margin-bottom: 0.17in">
taxname : :Barychelidae :Theraphosidae :Paratropididae 
	=Theraphosoidina = Mygalomorphae ; </P>
<P LANG="es-ES" STYLE="margin-left: 0.98in; margin-right: 0.47in; text-indent: -0.01in; margin-top: 0.07in; margin-bottom: 0.17in">
<FONT COLOR="#000000">taxname</FONT> : :Theraphosoidina
=Mygalomorphae 	&gt;Theraphosoidina ; </P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The <I><B>xread[</B></I>
	option did not randomize character sequence (as it was supossed to).
	Now it does.  [ Mark Siddall ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	<I><B>rcompl </B></I>command (see <I><B>help rcompl;</B></I>). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	option to read taxon names (in multi-block matrices) with a
	triple-dot ending, which is interpreted as “set all previously
	defined taxa which this name matches”.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Greatly
	speeded up the writing of multiple tags for trees with many taxa
	(writing the first label was ok, but relocating the corresponding
	nodes for subsequent writes used lousy code; a much better code is
	used now). 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of December, 2011 (February, 2012): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added to
	the <I><B>sort </B></I>command the possibility of sorting trees by
	number of nodes, taxa, or number of constraint groups for monophyly
	requirements are violated. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	only: improved the way in which tree-width is handled when trees are
	plotted fitting the screen (with the “F” option in the tree
	pre-viewing screen). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Greatly
	improved the speed for sorting, when there are very large numbers of
	trees to be sorted and they have many different categories (e.g. in
	trees for large data sets under implied weighting). 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Generating
	all trees (possible only for low numbers of taxa) when some taxa
	were deactivated created bogus trees; attempting to subsequently
	plot or optimize them, crashed the program.</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of February, 2012 (March, 2012): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Improved
	bounding for Fitch/Farris characters (under prior weights) in exact
	solutions (<I><B>ienum </B></I>command).  This makes execution
	significantly faster for larger data sets (i.e. 14 or more taxa)
	with good structure;  it does not make much of a difference for
	smaller and noisy data sets.  In case you want to compare, the
	previous implementation is    retained as the &quot;<I><B>ienum-</B></I>&quot;
	option (available only via commands). </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Documented
	the <I><B>pcrprune </B></I>command, which implements Pol and
	Escapa's (2009) iterative PCR nethod. Also, fixed some bugs in this
	command (which are unlikely to have affected anybody, since the
	command itself was undocumented. [ Diego Pol ] </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	<I><B>forfiles </B></I>scripting command, and thus also the
	expressions <I><B>curwd</B></I>, <I><B>curfile</B></I>, and
	<I><B>curisdir</B></I>. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	<I><B>bandb </B></I>scritping command, and thus also the expressions
	<I><B>bbtax </B></I>and <I><B>bbfull</B></I>. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	only: made further improvements to tree displaying when fitting to
	screen. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Scripting:
	defining a default target for <I><B>goto </B></I>did not work when
	the error occured inside <I><B>sprit</B></I>, <I><B>tbrit</B></I>,
	<I><B>combine</B></I>, or <I><B>iterrecs </B></I>command.  It
	should work always now. </P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The help
	for the expression <I><B>distnode </B></I>listed it as &quot;<I><B>distnod</B></I>&quot;;
	the correct name is used now.  [ Martín Ramírez ]</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of March, 2012 (May, 2012): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in"><A NAME="DDE_LINK"></A>
	improved speed of <I><B>pcrprune </B></I>for many taxa; added [N]
	and &gt;N options to <I><B>pcrprune</B></I>. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">added
	untouchables to the commands <I><B>prunnelsen </B></I>and <I><B>pruncom</B></I>.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">64-bit
	versions (Linux and Mac) had a problem with accessing arguments to
	scripts; this only surfaced with mxproc 25 or more, but it could
	well have caused problems in other cases as well. 
	</P>
</UL>
<P LANG="es-ES" STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes
to the version of May, 2012 (Sept., 2012): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Windows
	only: the <I><B>“var +”</B></I> option (to plot variables in a
	graph) had problems saving graphs where the X and Y axes had very
	different maxima. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixed some
	problems with macro expressions <I><B>minval</B></I>, <I><B>maxval</B></I>,
	and <I><B>meanval</B></I>. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Runnig
	autoconstrained ratchet within an autoconstrained driven search, or
	running an autoconstrained drift within an autoconstrained driven
	search using ratchet (of any kind) produced either bogus results or
	crashed the program. Fixed now. [ <FONT FACE="Times New Roman, serif">Â</FONT>ngelo
	P. Pinto ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Running
	autoconstrained ratchet or drifting from within a
	non-autoconstrained driven search crashed the program. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Random
	sectorial searches selecting sectors of size 3 (or probably less)
	was allowed, but produced bogus results.  This sector size is, in
	any event, not very meaningful. The program now issues an error
	message if you attempt to set minimum sector size to less than 5.  [
	<FONT FACE="Times New Roman, serif">Â</FONT>ngelo P. Pinto ]</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of Sept. 2012 (Nov. 2012) 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	extended implied weighting (<I><B>xpiwe </B></I>option) had problems
	when different concavities were used for different characters, but
	some characters were left with no concavity specified.  This was
	supossed to leave those unspecified characters with the default
	concavity, but it didn't, and thus searches and score calculations
	were bogus. [ James Carpenter ] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Saving the
	data and character settings for active characters only (either with
	“<I><B>xread -*”</B></I> or with <U><B>Data/SaveData</B></U>)
	produced an erroneous list of character names when some active
	characters had not been named (it was ok when all characters had
	names). Fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Scripting:
	Fixed the expressions <I><B>taxinblock </B></I>and <I><B>nummissing</B></I>,
	so that now they properly take into account landmark characters
	(they didn't before). 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of Nov. 2012 (Jan. 2013)</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	interpolator used to calculate weights fro fractional numbers of
	steps (when a user weighting function was used under extended
	implied weights) had a problem.   It made many more straight lines
	than it should have (there was an error checking whether a segment
	is curved; it always concluded “no”). This may have been a
	problem for analyses with <I><B>xpiwe=</B></I> under user-defined
	weighting functions.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">When the
	outgroup had a missing entry for a landmark character, and the first
	subsequent tree split involved a terminal taxon also with a missing
	entry, the coordinates for the first two (most basal) tree nodes
	were bogus.  Fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">There were
	some problems with <I><B>impwtlist</B></I> expression, sometimes
	causing crashes. Fixed. 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of Jan. 2013 (May 2013): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	double-line option of <I><B>tplot+</B></I> did not work when some
	shrinks were defined (with <I><B>thsrink</B></I>).  Now it does. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The<I><B>
	tshrink</B></I> command could not properly read names of shrinks to
	activate/deactivate/undefine (the name of the group was expected to
	be a truncation of the name given in the list; it is now the other
	way around, as expected).  Also, shrink number 0 could not be
	referred to by name; now it can. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">When doing
	multiple RAS the program checked whether a tree existed in memory
	before, but without considering score –thus, under rule 1, two
	different binary trees with different score might collapse to the
	same one, and this wasn't considered during <I><B>mult</B></I>
	(only at the end).  Then, if trees A and B collapse to the same
	tree, but A has worse score than B and A is found first, and B is
	the best tree of all replications, A would have been stored and B
	would not --thus, <I><B>mult </B></I>found &quot;no trees&quot;,
	because B --the best tree-- was never stored, and A was dumped at
	the end because it wasn't of the best score. Uncommon, but possible.
	 Fixed now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixed bugs
	when using positive constraints with floating taxa.  When the
	constraints could not be obeyed at the same, searches could have
	delivered trees not obeying constraints, instead of reporting an
	error.  
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">There was a
	bug in calculations under self-weighted optimization.  This surfaced
	only under 64-bit Linux versions, but it is conceivable that the bad
	code could have caused problems in other versions as well. In the
	example for 64-bit versions, the program crashed when attempting to
	calculate score, but in other cases it could well have produced
	erratic/unexpected results.  Fixed now. [ Marcos Mirande ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">If tree
	tags exist, now they are also saved in Nexus format.  Thus, for
	example, to save group supports as Nexus, you would have to type: 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">	<I><B>ttag=;
resample; taxname=; export – nexusfile.tre ; </B></I>
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Added the
	“combined bremer supports” to the <I><B>bsupport </B></I>command
	(“&amp;” option). This combines absolute and relative bremer
	supports, in such a way that the results of jackknifing are
	approximated, in the case of simple data sets.  The combination is
	(Q.R)<SUP>1/A</SUP> , where Q = 1 – P<SUB>(del) </SUB>, R =
	relative support, and A = absolute support. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Now it is
	possible to consider only trees within the absolute support, when
	calculating the relative bremer supports via TBR.  
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Fixes/changes to
the version of May 2013 (Sept 2013): 
</P>
<UL>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">A bug
	introduced in March 2012, with the new bounding for exact solutions:
	a driven New Tech search (<I><B>xmult </B></I>command) right after
	an exact solution with the new (=default) bounding method produced
	erroneous results. This could be avoided by using the older method
	for exact solutions (<I><B>ienum–</B></I>) or by issuing a <I><B>length
	</B></I>command before doing the New Tech Search.  This only arose
	in the very unlikely scenario that you wanted to do both an exact
	and a New Tech search for a data set.  Annoying, nonetheless. Fixed
	now. [ Douglas Ribeiro ]</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The option
	to save colored trees as SVG files with user-defined (RGB) color
	codes  for some branches did not work.  Fixed now. [ Martín Ramírez
	] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	heuristic aligner for landmark data produced an error when some taxa
	were missing from some block. Fixed. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Mapping
	landmark data had problems when the outgroup had a missing state.</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">The
	alignment on a tree could not handle configurations with missing
	entries, but instead of producing a warning and error message, it
	crashed the program. A warning is issued now. 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">A bug in
	all 32-bit versions (Windows, Mac, and Linux): bootstrapping data
	sets with more than 32,767 characters never selected any character
	beyond number 32,767.  Thus, the resampled matrices had a non-random
	sample of characters for more than 32,767 original characters.  This
	affected only the standard bootstrapping (not the Poisson).  [ Mark
	Simmons ] 
	</P>
	<LI><P STYLE="margin-top: 0.07in; margin-bottom: 0.17in">Before, the
	scripting expression <I><B>getrandom </B></I>returned a random
	number between 0 and 32,767, even if the upper limit of the interval
	was much larger.  Now, it properly returns values up to much larger
	numbers. 
	</P>
</UL>
<P STYLE="margin-top: 0.07in; margin-bottom: 0.17in"><BR><BR>
</P>
</BODY>
</HTML>